{"ast":null,"code":"var _jsxFileName = \"/Users/lawrencehan/Documents/GitHub/hanlarry/src/pages/projects/projectCard/ProjectCard.tsx\";\nimport React from 'react';\nimport { motion } from 'framer-motion';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ProjectCard(props) {\n  const {\n    darkMode,\n    id,\n    title,\n    text,\n    techList,\n    blob,\n    image\n  } = props;\n  let odd = id % 2 !== 0;\n  console.log(id);\n  console.log(odd); // Card is split into image section and text section\n  // // 'odd' will alternate order of the two sections per card\n\n  const CardImage = _ref => {\n    let {\n      blob,\n      image\n    } = _ref;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-image-wrap\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: require(`./projectBlobs/${blob}`),\n        className: `card-image blob ${odd ? \"odd-blob\" : \"even-blob\"}`,\n        alt: \"blob\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: require(`./projectImages/${image}`),\n        className: \"card-image example\",\n        alt: \"card-image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this);\n  };\n\n  const CardText = _ref2 => {\n    let {\n      title,\n      text,\n      techList\n    } = _ref2;\n    const UsedTech = techList.map((tech, i) => {\n      let lastCheck = i === techList.length;\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"\\xA0\", tech, lastCheck && \"\\u2022\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this);\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-text\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: `card-text-title ${odd && \"odd-card\"}`,\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: `card-text-text`,\n        children: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"card-text-tech\",\n        children: UsedTech\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this);\n  }; // Returning card\n\n\n  if (odd) {\n    return /*#__PURE__*/_jsxDEV(motion.div, {\n      className: \"project-card\",\n      children: [/*#__PURE__*/_jsxDEV(CardImage, {\n        blob: blob,\n        image: image\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CardText, {\n        title: title,\n        text: text,\n        techList: techList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(motion.div, {\n      className: \"project-card\",\n      children: [/*#__PURE__*/_jsxDEV(CardText, {\n        title: title,\n        text: text,\n        techList: techList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CardImage, {\n        blob: blob,\n        image: image\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this);\n  }\n}\n_c = ProjectCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProjectCard\");","map":{"version":3,"sources":["/Users/lawrencehan/Documents/GitHub/hanlarry/src/pages/projects/projectCard/ProjectCard.tsx"],"names":["React","motion","ProjectCard","props","darkMode","id","title","text","techList","blob","image","odd","console","log","CardImage","require","CardText","UsedTech","map","tech","i","lastCheck","length"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { motion } from 'framer-motion';\ninterface Card {\n    darkMode: boolean;\n    id: number;\n    title: string;\n    text: string;\n    techList: string[];\n    image: string;\n    blob: string;\n}\n\n\nexport default function ProjectCard(props:Card) {\n    const { darkMode, id, title, text, techList, blob, image } = props;\n    let odd:boolean = ( id % 2 !== 0 )\n    console.log(id)\n    console.log(odd)\n\n\n    // Card is split into image section and text section\n    // // 'odd' will alternate order of the two sections per card\n    const CardImage = ({blob, image}) => {\n        return (\n            <div className=\"card-image-wrap\">\n                <img \n                    src={require(`./projectBlobs/${blob}`)}\n                    className={`card-image blob ${odd ? \"odd-blob\" : \"even-blob\"}`}\n                    alt=\"blob\"\n                />\n                <img \n                    src={require(`./projectImages/${image}`)}\n                    className=\"card-image example\"\n                    alt=\"card-image\"\n                />\n            </div>\n        )\n    }\n    const CardText = ({title, text, techList}) => {\n        const UsedTech = techList.map((tech, i) => {\n            let lastCheck:boolean = ( i === techList.length )\n            return (\n                <span>&nbsp;{tech}{lastCheck && \"\\u2022\"}</span>\n            )\n        })\n\n        \n\n        return (\n            <div className=\"card-text\">\n                <h1 className={`card-text-title ${odd && \"odd-card\"}`}>{title}</h1>\n                <p className={`card-text-text`}>{text}</p>\n                {/* <p className={`card-text-tech`}>&#183;</p> */}\n                <p className=\"card-text-tech\">{UsedTech}</p>\n            </div>\n        )\n    }\n\n    // Returning card\n    if (odd) {\n        return (\n            <motion.div className=\"project-card\">\n                <CardImage blob={blob} image={image} />\n                <CardText title={title} text={text} techList={techList} />\n            </motion.div>\n        )\n    } else {\n        return (\n            <motion.div className=\"project-card\">\n                <CardText title={title} text={text} techList={techList} />\n                <CardImage blob={blob} image={image} />\n            </motion.div>\n        )  \n    }\n}"]},"metadata":{},"sourceType":"module"}