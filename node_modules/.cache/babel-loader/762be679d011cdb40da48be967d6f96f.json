{"ast":null,"code":"var _jsxFileName = \"/Users/lawrencehan/Documents/GitHub/hanlarry/src/pages/projects/projectCard/ProjectCard.tsx\";\nimport React from 'react';\nimport { motion } from 'framer-motion';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ProjectCard(props) {\n  const {\n    darkMode,\n    id,\n    title,\n    text,\n    techList,\n    blob,\n    vector,\n    image,\n    link\n  } = props;\n  let odd = id % 2 !== 0;\n  console.log(id);\n  console.log(odd); // Card is split into image section and text section\n  // // 'odd' will alternate order of the two sections per card\n\n  const CardImage = _ref => {\n    let {\n      blob,\n      vector,\n      image\n    } = _ref;\n\n    const exampleImage = () => {\n      if (vector) {\n        return /*#__PURE__*/_jsxDEV(\"a\", {\n          href: link,\n          target: \"_blank\",\n          className: \"card-image card-link\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: require(`./projectImages/${image}`),\n            className: \"example\",\n            alt: \"card-image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 21\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(\"a\", {\n          href: link,\n          target: \"_blank\",\n          className: \"card-image card-link\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: require(`./projectImages/${image}`),\n            className: \"example\",\n            alt: \"card-image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this);\n      }\n    };\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-image-wrap\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: require(`./projectBlobs/${blob}`),\n        className: `card-image blob ${odd ? \"odd-blob\" : \"even-blob\"}`,\n        alt: \"blob\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), exampleImage]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this);\n  };\n\n  const CardText = _ref2 => {\n    let {\n      title,\n      text,\n      techList,\n      link\n    } = _ref2;\n    const usedTech = techList.map((tech, i) => {\n      let lastCheck = i !== techList.length - 1;\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"\\xA0\", tech, lastCheck && \"\\u000A \\u2022\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this);\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-text\",\n      children: [/*#__PURE__*/_jsxDEV(\"a\", {\n        href: link,\n        target: \"_blank\",\n        className: `card-text-title ${odd && \"odd-card\"}`,\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: `card-text-text`,\n        children: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: `card-text-tech ${odd && \"odd-card\"}`,\n        children: usedTech\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this);\n  }; // Returning card\n\n\n  if (odd) {\n    return /*#__PURE__*/_jsxDEV(motion.div, {\n      className: \"project-card\",\n      children: [/*#__PURE__*/_jsxDEV(CardImage, {\n        blob: blob,\n        image: image\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CardText, {\n        title: title,\n        text: text,\n        techList: techList,\n        link: link\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(motion.div, {\n      className: \"project-card\",\n      children: [/*#__PURE__*/_jsxDEV(CardText, {\n        title: title,\n        text: text,\n        techList: techList,\n        link: link\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CardImage, {\n        blob: blob,\n        image: image\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this);\n  }\n}\n_c = ProjectCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProjectCard\");","map":{"version":3,"sources":["/Users/lawrencehan/Documents/GitHub/hanlarry/src/pages/projects/projectCard/ProjectCard.tsx"],"names":["React","motion","ProjectCard","props","darkMode","id","title","text","techList","blob","vector","image","link","odd","console","log","CardImage","exampleImage","require","CardText","usedTech","map","tech","i","lastCheck","length"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { motion } from 'framer-motion';\ninterface Card {\n    darkMode: boolean;\n    id: number;\n    title: string;\n    text: string;\n    techList: string[];\n    blob: string;\n    vector: boolean;\n    image?: string;\n    link?: string;\n}\n\n\nexport default function ProjectCard(props:Card) {\n    const { darkMode, id, title, text, techList, blob, vector, image, link } = props;\n    let odd:boolean = ( id % 2 !== 0 )\n    console.log(id)\n    console.log(odd)\n\n    // Card is split into image section and text section\n    // // 'odd' will alternate order of the two sections per card\n    const CardImage = ({blob, vector, image}) => {\n        const exampleImage = () => {\n            if (vector) {\n                return (\n                    <a href={link} target=\"_blank\" className=\"card-image card-link\">\n                        <img \n                            src={require(`./projectImages/${image}`)}\n                            className=\"example\"\n                            alt=\"card-image\"\n                        />\n                    </a>\n                )\n            } else {\n                return (\n                    <a href={link} target=\"_blank\" className=\"card-image card-link\">\n                        <img \n                            src={require(`./projectImages/${image}`)}\n                            className=\"example\"\n                            alt=\"card-image\"\n                        />\n                    </a>\n                )\n            }\n        }\n\n        return (\n            <div className=\"card-image-wrap\">\n                <img \n                    src={require(`./projectBlobs/${blob}`)}\n                    className={`card-image blob ${odd ? \"odd-blob\" : \"even-blob\"}`}\n                    alt=\"blob\"\n                />\n                {exampleImage}\n            </div>\n        )\n    }\n    const CardText = ({title, text, techList, link}) => {\n        const usedTech = techList.map((tech, i) => {\n            let lastCheck:boolean = ( i !== techList.length-1 )\n            return (\n                <span>&nbsp;{tech}{lastCheck && \"\\u000A \\u2022\"}</span>\n            )\n        })\n\n        return (\n            <div className=\"card-text\">\n                <a href={link} target=\"_blank\" className={`card-text-title ${odd && \"odd-card\"}`}>{title}</a>\n                <p className={`card-text-text`}>{text}</p>\n                <p className={`card-text-tech ${odd && \"odd-card\"}`}>{usedTech}</p>\n            </div>\n        )\n    }\n\n    // Returning card\n    if (odd) {\n        return (\n            <motion.div className=\"project-card\">\n                <CardImage blob={blob} image={image} />\n                <CardText title={title} text={text} techList={techList} link={link} />\n            </motion.div>\n        )\n    } else {\n        return (\n            <motion.div className=\"project-card\">\n                <CardText title={title} text={text} techList={techList} link={link}/>\n                <CardImage blob={blob} image={image} />\n            </motion.div>\n        )  \n    }\n}"]},"metadata":{},"sourceType":"module"}