{"ast":null,"code":"var _jsxFileName = \"/Users/lawrencehan/Documents/GitHub/hanlarry/src/pages/projects/projectCard/ProjectCard.tsx\";\nimport React from 'react';\nimport { motion } from 'framer-motion';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ProjectCard(props) {\n  const {\n    darkMode,\n    key,\n    title,\n    text,\n    blob,\n    image\n  } = props;\n  let odd = key % 2 !== 0; // Card is split into image section and text section\n  // // 'odd' will alternate order of the two sections per card\n\n  const CardImage = _ref => {\n    let {\n      blob,\n      image\n    } = _ref;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-image-wrap\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: require(`./projectBlobs/${blob}`),\n        className: \"card-image blob\",\n        alt: \"blob\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: require(`./projectImages/${image}`),\n        className: \"card-image example\",\n        alt: \"card-image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this);\n  };\n\n  const CardText = _ref2 => {\n    let {\n      title,\n      text\n    } = _ref2;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-text\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: `card-text-title ${odd && \"odd-card\"}`,\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: `card-text-text ${odd && \"odd-card\"}`,\n        children: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this);\n  }; // Returning card\n\n\n  if (odd) {\n    return /*#__PURE__*/_jsxDEV(motion.div, {\n      className: \"project-card\",\n      children: [/*#__PURE__*/_jsxDEV(CardImage, {\n        blob: blob,\n        image: image\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CardText, {\n        title: title,\n        text: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(motion.div, {\n      className: \"project-card\",\n      children: [/*#__PURE__*/_jsxDEV(CardText, {\n        title: title,\n        text: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CardImage, {\n        blob: blob,\n        image: image\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this);\n  }\n}\n_c = ProjectCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProjectCard\");","map":{"version":3,"sources":["/Users/lawrencehan/Documents/GitHub/hanlarry/src/pages/projects/projectCard/ProjectCard.tsx"],"names":["React","motion","ProjectCard","props","darkMode","key","title","text","blob","image","odd","CardImage","require","CardText"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,eAAvB;;AAWA,eAAe,SAASC,WAAT,CAAqBC,KAArB,EAAiC;AAC5C,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,GAAZ;AAAiBC,IAAAA,KAAjB;AAAwBC,IAAAA,IAAxB;AAA8BC,IAAAA,IAA9B;AAAoCC,IAAAA;AAApC,MAA8CN,KAApD;AACA,MAAIO,GAAW,GAAKL,GAAG,GAAG,CAAN,KAAY,CAAhC,CAF4C,CAK5C;AACA;;AACA,QAAMM,SAAS,GAAG,QAAmB;AAAA,QAAlB;AAACH,MAAAA,IAAD;AAAOC,MAAAA;AAAP,KAAkB;AACjC,wBACI;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA,8BACI;AACI,QAAA,GAAG,EAAEG,OAAO,CAAE,kBAAiBJ,IAAK,EAAxB,CADhB;AAEI,QAAA,SAAS,EAAC,iBAFd;AAGI,QAAA,GAAG,EAAC;AAHR;AAAA;AAAA;AAAA;AAAA,cADJ,eAMI;AACI,QAAA,GAAG,EAAEI,OAAO,CAAE,mBAAkBH,KAAM,EAA1B,CADhB;AAEI,QAAA,SAAS,EAAC,oBAFd;AAGI,QAAA,GAAG,EAAC;AAHR;AAAA;AAAA;AAAA;AAAA,cANJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAcH,GAfD;;AAgBA,QAAMI,QAAQ,GAAG,SAAmB;AAAA,QAAlB;AAACP,MAAAA,KAAD;AAAQC,MAAAA;AAAR,KAAkB;AAChC,wBACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACI;AAAI,QAAA,SAAS,EAAG,mBAAkBG,GAAG,IAAI,UAAW,EAApD;AAAA,kBAAwDJ;AAAxD;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAG,QAAA,SAAS,EAAG,kBAAiBI,GAAG,IAAI,UAAW,EAAlD;AAAA,kBAAsDH;AAAtD;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAMH,GAPD,CAvB4C,CAgC5C;;;AACA,MAAIG,GAAJ,EAAS;AACL,wBACI,QAAC,MAAD,CAAQ,GAAR;AAAY,MAAA,SAAS,EAAC,cAAtB;AAAA,8BACI,QAAC,SAAD;AAAW,QAAA,IAAI,EAAEF,IAAjB;AAAuB,QAAA,KAAK,EAAEC;AAA9B;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,QAAD;AAAU,QAAA,KAAK,EAAEH,KAAjB;AAAwB,QAAA,IAAI,EAAEC;AAA9B;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAMH,GAPD,MAOO;AACH,wBACI,QAAC,MAAD,CAAQ,GAAR;AAAY,MAAA,SAAS,EAAC,cAAtB;AAAA,8BACI,QAAC,QAAD;AAAU,QAAA,KAAK,EAAED,KAAjB;AAAwB,QAAA,IAAI,EAAEC;AAA9B;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,SAAD;AAAW,QAAA,IAAI,EAAEC,IAAjB;AAAuB,QAAA,KAAK,EAAEC;AAA9B;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAMH;AACJ;KAhDuBP,W","sourcesContent":["import React from 'react';\nimport { motion } from 'framer-motion';\ninterface Card {\n    darkMode: boolean;\n    key: number;\n    title: string;\n    text: string;\n    image: string;\n    blob: string;\n}\n\n\nexport default function ProjectCard(props:Card) {\n    const { darkMode, key, title, text, blob, image } = props;\n    let odd:boolean = ( key % 2 !== 0 )\n\n\n    // Card is split into image section and text section\n    // // 'odd' will alternate order of the two sections per card\n    const CardImage = ({blob, image}) => {\n        return (\n            <div className=\"card-image-wrap\">\n                <img \n                    src={require(`./projectBlobs/${blob}`)}\n                    className=\"card-image blob\"\n                    alt=\"blob\"\n                />\n                <img \n                    src={require(`./projectImages/${image}`)}\n                    className=\"card-image example\"\n                    alt=\"card-image\"\n                />\n            </div>\n        )\n    }\n    const CardText = ({title, text}) => {\n        return (\n            <div className=\"card-text\">\n                <h1 className={`card-text-title ${odd && \"odd-card\"}`}>{title}</h1>\n                <p className={`card-text-text ${odd && \"odd-card\"}`}>{text}</p>\n            </div>\n        )\n    }\n\n    // Returning card\n    if (odd) {\n        return (\n            <motion.div className=\"project-card\">\n                <CardImage blob={blob} image={image} />\n                <CardText title={title} text={text} />\n            </motion.div>\n        )\n    } else {\n        return (\n            <motion.div className=\"project-card\">\n                <CardText title={title} text={text} />\n                <CardImage blob={blob} image={image} />\n            </motion.div>\n        )  \n    }\n}"]},"metadata":{},"sourceType":"module"}