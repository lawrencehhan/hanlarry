{"ast":null,"code":"var _jsxFileName = \"/Users/lawrencehan/Documents/GitHub/hanlarry/src/pages/contact/Contact.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { motion, useAnimation } from 'framer-motion';\nimport { useInView } from 'react-intersection-observer';\nimport './contact.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Contact(props) {\n  _s();\n\n  const {\n    darkMode,\n    contactRef\n  } = props;\n  const controls = useAnimation();\n  const {\n    ref,\n    inView\n  } = useInView();\n  useEffect(() => {\n    if (inView) {\n      controls.start(\"visible\");\n    }\n  }, [controls, inView]);\n  const variants = {\n    hidden: {\n      opacity: 0\n    },\n    visible: {\n      opacity: 1,\n      transition: {\n        duration: 1,\n        staggerChildren: 0.5\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(motion.div, {\n    className: `contact page ${darkMode && \"dark\"}`,\n    ref: contactRef,\n    initial: \"hidden\",\n    animate: \"visible\",\n    variants: variants,\n    children: /*#__PURE__*/_jsxDEV(motion.img, {\n      src: require(`../../assets/contact/${darkMode ? \"githubDM.png\" : \"github.png\"}`),\n      className: \"contact-icon\",\n      alt: \"Github\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 15\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Contact, \"hfIZHLdLU/wHYEBob1fDEa5Q/ao=\", false, function () {\n  return [useAnimation, useInView];\n});\n\n_c = Contact;\n\nvar _c;\n\n$RefreshReg$(_c, \"Contact\");","map":{"version":3,"sources":["/Users/lawrencehan/Documents/GitHub/hanlarry/src/pages/contact/Contact.tsx"],"names":["React","useEffect","motion","useAnimation","useInView","Contact","props","darkMode","contactRef","controls","ref","inView","start","variants","hidden","opacity","visible","transition","duration","staggerChildren","require"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,EAAiBC,YAAjB,QAAqC,eAArC;AACA,SAASC,SAAT,QAA0B,6BAA1B;AACA,OAAO,eAAP;;AAOA,eAAe,SAASC,OAAT,CAAiBC,KAAjB,EAAgC;AAAA;;AAC3C,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAA2BF,KAAjC;AACA,QAAMG,QAAQ,GAAGN,YAAY,EAA7B;AACA,QAAM;AAAEO,IAAAA,GAAF;AAAOC,IAAAA;AAAP,MAAkBP,SAAS,EAAjC;AACAH,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIU,MAAJ,EAAY;AACRF,MAAAA,QAAQ,CAACG,KAAT,CAAe,SAAf;AACH;AACJ,GAJQ,EAIN,CAACH,QAAD,EAAWE,MAAX,CAJM,CAAT;AAMA,QAAME,QAAQ,GAAG;AACbC,IAAAA,MAAM,EAAE;AACJC,MAAAA,OAAO,EAAE;AADL,KADK;AAIbC,IAAAA,OAAO,EAAE;AACLD,MAAAA,OAAO,EAAE,CADJ;AAELE,MAAAA,UAAU,EAAE;AACRC,QAAAA,QAAQ,EAAE,CADF;AAERC,QAAAA,eAAe,EAAE;AAFT;AAFP;AAJI,GAAjB;AAaA,sBACI,QAAC,MAAD,CAAQ,GAAR;AAAY,IAAA,SAAS,EAAG,gBAAeZ,QAAQ,IAAI,MAAO,EAA1D;AACA,IAAA,GAAG,EAAEC,UADL;AAEA,IAAA,OAAO,EAAC,QAFR;AAGA,IAAA,OAAO,EAAC,SAHR;AAIA,IAAA,QAAQ,EAAEK,QAJV;AAAA,2BAMM,QAAC,MAAD,CAAQ,GAAR;AAAY,MAAA,GAAG,EAAEO,OAAO,CAAE,wBAAuBb,QAAQ,GAAG,cAAH,GAAoB,YAAa,EAAlE,CAAxB;AAA8F,MAAA,SAAS,EAAC,cAAxG;AAAuH,MAAA,GAAG,EAAC;AAA3H;AAAA;AAAA;AAAA;AAAA;AANN;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH;;GAjCuBF,O;UAEHF,Y,EACOC,S;;;KAHJC,O","sourcesContent":["import React, { useEffect } from 'react';\nimport { motion, useAnimation } from 'framer-motion';\nimport { useInView } from 'react-intersection-observer';\nimport './contact.css';\n\ninterface Contact {\n    darkMode: boolean;\n    contactRef: React.MutableRefObject<HTMLDivElement | null>;\n}\n\nexport default function Contact(props:Contact) {\n    const { darkMode, contactRef } = props;\n    const controls = useAnimation();\n    const { ref, inView } = useInView();\n    useEffect(() => {\n        if (inView) {\n            controls.start(\"visible\")\n        }\n    }, [controls, inView])\n\n    const variants = {\n        hidden: {\n            opacity: 0,\n        },\n        visible: {\n            opacity: 1,\n            transition: {\n                duration: 1,\n                staggerChildren: 0.5\n            }\n        }\n    }\n    \n    return (\n        <motion.div className={`contact page ${darkMode && \"dark\"}`}\n        ref={contactRef}\n        initial='hidden'\n        animate='visible'\n        variants={variants}\n        >\n              <motion.img src={require(`../../assets/contact/${darkMode ? \"githubDM.png\" : \"github.png\"}`)} className='contact-icon' alt=\"Github\" />\n        </motion.div>\n    )\n}"]},"metadata":{},"sourceType":"module"}