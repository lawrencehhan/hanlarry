{"ast":null,"code":"var _jsxFileName = \"/Users/lawrencehan/Documents/GitHub/hanlarry/src/pages/contact/Contact.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { motion, useAnimation } from 'framer-motion';\nimport { useInView } from 'react-intersection-observer';\nimport './contact.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Contact(props) {\n  _s();\n\n  const {\n    darkMode,\n    contactRef\n  } = props;\n  const controls = useAnimation();\n  const {\n    ref,\n    inView\n  } = useInView();\n  useEffect(() => {\n    if (inView) {\n      controls.start(\"visible\");\n    }\n  }, [controls, inView]);\n  const variants = {\n    hidden: {\n      opacity: 0\n    },\n    visible: {\n      opacity: 1,\n      transition: {\n        duration: 2\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `contact page ${darkMode && \"dark\"}`,\n    ref: contactRef,\n    children: [/*#__PURE__*/_jsxDEV(\"a\", {\n      href: \"https://github.com/lawrencehhan\",\n      className: \"icon-wrapper\",\n      target: \"_blank\",\n      ref: ref,\n      children: /*#__PURE__*/_jsxDEV(motion.img, {\n        src: require(`../../assets/contact/${darkMode ? \"githubDM.png\" : \"github.png\"}`),\n        className: \"contact-icon\",\n        alt: \"Github\",\n        initial: \"hidden\",\n        animate: controls,\n        variants: variants\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n      href: \"https://www.linkedin.com/in/lawrence-han-332505206/\",\n      className: \"icon-wrapper\",\n      target: \"_blank\",\n      children: /*#__PURE__*/_jsxDEV(motion.img, {\n        src: require(`../../assets/contact/${darkMode ? \"linkedinDM.png\" : \"linkedin.png\"}`),\n        className: \"contact-icon\",\n        alt: \"LinkedIn\",\n        initial: \"hidden\",\n        animate: controls,\n        variants: variants\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n      href: \"https://www.instagram.com/han.larry/\",\n      className: \"icon-wrapper\",\n      target: \"_blank\",\n      children: /*#__PURE__*/_jsxDEV(motion.img, {\n        src: require(`../../assets/contact/${darkMode ? \"instagramDM.png\" : \"instagram.png\"}`),\n        className: \"contact-icon\",\n        alt: \"Instagram\",\n        initial: \"hidden\",\n        animate: controls,\n        variants: variants\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Contact, \"hfIZHLdLU/wHYEBob1fDEa5Q/ao=\", false, function () {\n  return [useAnimation, useInView];\n});\n\n_c = Contact;\n\nvar _c;\n\n$RefreshReg$(_c, \"Contact\");","map":{"version":3,"sources":["/Users/lawrencehan/Documents/GitHub/hanlarry/src/pages/contact/Contact.tsx"],"names":["React","useEffect","motion","useAnimation","useInView","Contact","props","darkMode","contactRef","controls","ref","inView","start","variants","hidden","opacity","visible","transition","duration","require"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,EAAiBC,YAAjB,QAAqC,eAArC;AACA,SAASC,SAAT,QAA0B,6BAA1B;AACA,OAAO,eAAP;;AAOA,eAAe,SAASC,OAAT,CAAiBC,KAAjB,EAAgC;AAAA;;AAC3C,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAA2BF,KAAjC;AACA,QAAMG,QAAQ,GAAGN,YAAY,EAA7B;AACA,QAAM;AAAEO,IAAAA,GAAF;AAAOC,IAAAA;AAAP,MAAkBP,SAAS,EAAjC;AACAH,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIU,MAAJ,EAAY;AACRF,MAAAA,QAAQ,CAACG,KAAT,CAAe,SAAf;AACH;AACJ,GAJQ,EAIN,CAACH,QAAD,EAAWE,MAAX,CAJM,CAAT;AAMA,QAAME,QAAQ,GAAG;AACbC,IAAAA,MAAM,EAAE;AACJC,MAAAA,OAAO,EAAE;AADL,KADK;AAIbC,IAAAA,OAAO,EAAE;AACLD,MAAAA,OAAO,EAAE,CADJ;AAELE,MAAAA,UAAU,EAAE;AACRC,QAAAA,QAAQ,EAAE;AADF;AAFP;AAJI,GAAjB;AAYA,sBACI;AAAK,IAAA,SAAS,EAAG,gBAAeX,QAAQ,IAAI,MAAO,EAAnD;AACA,IAAA,GAAG,EAAEC,UADL;AAAA,4BAGI;AAAG,MAAA,IAAI,EAAC,iCAAR;AAA0C,MAAA,SAAS,EAAC,cAApD;AAAmE,MAAA,MAAM,EAAC,QAA1E;AAAmF,MAAA,GAAG,EAAEE,GAAxF;AAAA,6BACI,QAAC,MAAD,CAAQ,GAAR;AACI,QAAA,GAAG,EAAES,OAAO,CAAE,wBAAuBZ,QAAQ,GAAG,cAAH,GAAoB,YAAa,EAAlE,CADhB;AAEI,QAAA,SAAS,EAAC,cAFd;AAGI,QAAA,GAAG,EAAC,QAHR;AAII,QAAA,OAAO,EAAC,QAJZ;AAKI,QAAA,OAAO,EAAEE,QALb;AAMI,QAAA,QAAQ,EAAEI;AANd;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAHJ,eAaI;AAAG,MAAA,IAAI,EAAC,qDAAR;AAA8D,MAAA,SAAS,EAAC,cAAxE;AAAuF,MAAA,MAAM,EAAC,QAA9F;AAAA,6BACI,QAAC,MAAD,CAAQ,GAAR;AACI,QAAA,GAAG,EAAEM,OAAO,CAAE,wBAAuBZ,QAAQ,GAAG,gBAAH,GAAsB,cAAe,EAAtE,CADhB;AAEI,QAAA,SAAS,EAAC,cAFd;AAGI,QAAA,GAAG,EAAC,UAHR;AAII,QAAA,OAAO,EAAC,QAJZ;AAKI,QAAA,OAAO,EAAEE,QALb;AAMI,QAAA,QAAQ,EAAEI;AANd;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAbJ,eAuBI;AAAG,MAAA,IAAI,EAAC,sCAAR;AAA+C,MAAA,SAAS,EAAC,cAAzD;AAAwE,MAAA,MAAM,EAAC,QAA/E;AAAA,6BACI,QAAC,MAAD,CAAQ,GAAR;AACI,QAAA,GAAG,EAAEM,OAAO,CAAE,wBAAuBZ,QAAQ,GAAG,iBAAH,GAAuB,eAAgB,EAAxE,CADhB;AAEI,QAAA,SAAS,EAAC,cAFd;AAGI,QAAA,GAAG,EAAC,WAHR;AAII,QAAA,OAAO,EAAC,QAJZ;AAKI,QAAA,OAAO,EAAEE,QALb;AAMI,QAAA,QAAQ,EAAEI;AANd;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAvBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAoCH;;GA1DuBR,O;UAEHF,Y,EACOC,S;;;KAHJC,O","sourcesContent":["import React, { useEffect } from 'react';\nimport { motion, useAnimation } from 'framer-motion';\nimport { useInView } from 'react-intersection-observer';\nimport './contact.css';\n\ninterface Contact {\n    darkMode: boolean;\n    contactRef: React.MutableRefObject<HTMLDivElement | null>;\n}\n\nexport default function Contact(props:Contact) {\n    const { darkMode, contactRef } = props;\n    const controls = useAnimation();\n    const { ref, inView } = useInView();\n    useEffect(() => {\n        if (inView) {\n            controls.start(\"visible\")\n        }\n    }, [controls, inView])\n\n    const variants = {\n        hidden: {\n            opacity: 0,\n        },\n        visible: {\n            opacity: 1,\n            transition: {\n                duration: 2,\n            }\n        }\n    }\n\n    return (\n        <div className={`contact page ${darkMode && \"dark\"}`}\n        ref={contactRef}\n        >\n            <a href=\"https://github.com/lawrencehhan\" className=\"icon-wrapper\" target=\"_blank\" ref={ref}>\n                <motion.img \n                    src={require(`../../assets/contact/${darkMode ? \"githubDM.png\" : \"github.png\"}`)} \n                    className='contact-icon' \n                    alt=\"Github\"\n                    initial=\"hidden\"\n                    animate={controls}\n                    variants={variants}\n                />\n            </a>\n            <a href=\"https://www.linkedin.com/in/lawrence-han-332505206/\" className=\"icon-wrapper\" target=\"_blank\">\n                <motion.img \n                    src={require(`../../assets/contact/${darkMode ? \"linkedinDM.png\" : \"linkedin.png\"}`)} \n                    className='contact-icon' \n                    alt=\"LinkedIn\"\n                    initial=\"hidden\"\n                    animate={controls}\n                    variants={variants}\n                />\n            </a>\n            <a href=\"https://www.instagram.com/han.larry/\" className=\"icon-wrapper\" target=\"_blank\">\n                <motion.img \n                    src={require(`../../assets/contact/${darkMode ? \"instagramDM.png\" : \"instagram.png\"}`)} \n                    className='contact-icon' \n                    alt=\"Instagram\"\n                    initial=\"hidden\"\n                    animate={controls}\n                    variants={variants}\n                />\n            </a>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}