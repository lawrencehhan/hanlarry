{"ast":null,"code":"var _jsxFileName = \"/Users/lawrencehan/Documents/GitHub/hanlarry/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useCallback } from 'react';\nimport './App.css';\nimport Intro from './pages/intro/Intro';\nimport Home from './pages/home/Home';\nimport DarkToggle from './components/darkToggle/DarkToggle';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n\n  // Handling en tering the home page from the intro section\n  const [enter, setEnter] = useState(false);\n  const handleEnter = useCallback(() => {\n    setEnter(prevEnter => {\n      return prevEnter ? prevEnter : !prevEnter;\n    });\n  }, []);\n  useEffect(() => {\n    window.addEventListener(\"click\", handleEnter);\n\n    if (enter) {\n      console.log('Cleaning eventListener for entrance...');\n      window.removeEventListener(\"click\", handleEnter);\n    }\n  }, [enter]);\n  const [darkMode, setDarkMode] = useState(true);\n\n  const handleDarkToggle = event => {\n    setDarkMode(prevDarkMode => !prevDarkMode);\n    console.log('in THE TOGGLE BUTTON');\n    event.stopPropagation();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `app ${darkMode ? \"dark\" : \"\"}`,\n    children: [enter ? /*#__PURE__*/_jsxDEV(Home, {\n      glassesDark: darkMode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(Intro, {\n      glassesDark: darkMode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 50\n    }, this), /*#__PURE__*/_jsxDEV(DarkToggle, {\n      darkMode: darkMode,\n      handleDarkToggle: handleDarkToggle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"UqFd0LH6UIb1s3EevtCY5sCBf9Q=\");\n\n_c = App;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/lawrencehan/Documents/GitHub/hanlarry/src/App.tsx"],"names":["React","useState","useEffect","useCallback","Intro","Home","DarkToggle","App","enter","setEnter","handleEnter","prevEnter","window","addEventListener","console","log","removeEventListener","darkMode","setDarkMode","handleDarkToggle","event","prevDarkMode","stopPropagation"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,EAAoCC,WAApC,QAAsD,OAAtD;AACA,OAAO,WAAP;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,UAAP,MAAuB,oCAAvB;;AAEA,eAAe,SAASC,GAAT,GAAe;AAAA;;AAC5B;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAU,KAAV,CAAlC;AACA,QAAMS,WAAW,GAAGP,WAAW,CAAC,MAAM;AACpCM,IAAAA,QAAQ,CAACE,SAAS,IAAI;AACpB,aAAOA,SAAS,GAAGA,SAAH,GAAe,CAACA,SAAhC;AACD,KAFO,CAAR;AAGD,GAJ8B,EAI5B,EAJ4B,CAA/B;AAKAT,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,MAAM,CAACC,gBAAP,CAAwB,OAAxB,EAAiCH,WAAjC;;AACA,QAAIF,KAAJ,EAAW;AACTM,MAAAA,OAAO,CAACC,GAAR,CAAY,wCAAZ;AACAH,MAAAA,MAAM,CAACI,mBAAP,CAA2B,OAA3B,EAAoCN,WAApC;AACD;AACF,GANQ,EAMN,CAACF,KAAD,CANM,CAAT;AAQA,QAAM,CAACS,QAAD,EAAWC,WAAX,IAA0BjB,QAAQ,CAAU,IAAV,CAAxC;;AACA,QAAMkB,gBAAgB,GAAIC,KAAD,IAA+C;AACtEF,IAAAA,WAAW,CAAEG,YAAY,IAAI,CAACA,YAAnB,CAAX;AACAP,IAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACAK,IAAAA,KAAK,CAACE,eAAN;AACD,GAJD;;AAMA,sBACE;AAAK,IAAA,SAAS,EAAG,OAAML,QAAQ,GAAG,MAAH,GAAY,EAAI,EAA/C;AAAA,eACIT,KAAK,gBAAG,QAAC,IAAD;AAAM,MAAA,WAAW,EAAES;AAAnB;AAAA;AAAA;AAAA;AAAA,YAAH,gBAAoC,QAAC,KAAD;AAAO,MAAA,WAAW,EAAEA;AAApB;AAAA;AAAA;AAAA;AAAA,YAD7C,eAEE,QAAC,UAAD;AAAY,MAAA,QAAQ,EAAEA,QAAtB;AAAgC,MAAA,gBAAgB,EAAEE;AAAlD;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;;GA7BuBZ,G;;KAAAA,G;AA6BvB","sourcesContent":["import React, {useState, useEffect, useCallback} from 'react';\nimport './App.css';\nimport Intro from './pages/intro/Intro'\nimport Home from './pages/home/Home'\nimport DarkToggle from './components/darkToggle/DarkToggle';\n\nexport default function App() {\n  // Handling en tering the home page from the intro section\n  const [enter, setEnter] = useState<boolean>(false);\n  const handleEnter = useCallback(() => {\n    setEnter(prevEnter => {\n      return prevEnter ? prevEnter : !prevEnter\n    })\n  }, []);\n  useEffect(() => {\n    window.addEventListener(\"click\", handleEnter)\n    if (enter) {\n      console.log('Cleaning eventListener for entrance...')\n      window.removeEventListener(\"click\", handleEnter)\n    }\n  }, [enter])\n\n  const [darkMode, setDarkMode] = useState<boolean>(true)\n  const handleDarkToggle = (event:React.ChangeEvent<HTMLInputElement>) => {\n    setDarkMode( prevDarkMode => !prevDarkMode )\n    console.log('in THE TOGGLE BUTTON')\n    event.stopPropagation();\n  }\n\n  return (\n    <div className={`app ${darkMode ? \"dark\" : \"\" }`}>\n      { enter ? <Home glassesDark={darkMode}/> : <Intro glassesDark={darkMode}/> }\n      <DarkToggle darkMode={darkMode} handleDarkToggle={handleDarkToggle}/>\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}