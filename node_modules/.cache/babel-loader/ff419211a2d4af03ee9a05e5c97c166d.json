{"ast":null,"code":"var _jsxFileName = \"/Users/lawrencehan/Documents/GitHub/hanlarry/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef } from 'react';\nimport './App.css';\nimport BackgroundCanvas from './components/background/BackgroundCanvas';\nimport Navbar from './components/navbar/Navbar';\nimport Home from './pages/home/Home';\nimport About from './pages/about/About';\nimport Projects from './pages/projects/Projects';\nimport Contact from './pages/contact/Contact';\nimport DarkToggle from './components/darkToggle/DarkToggle';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n\n  // Dark-Mode toggle and respective state\n  const isDarkMode = window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches;\n  const [darkMode, setDarkMode] = useState(isDarkMode);\n\n  const handleDarkToggle = event => {\n    setDarkMode(prevDarkMode => !prevDarkMode);\n    event.stopPropagation();\n  }; // Scrolling References\n\n\n  const homeRef = useRef(null);\n  const aboutRef = useRef(null);\n  const projectRef = useRef(null);\n  const contactRef = useRef(null);\n\n  const handleScroll = target => {\n    var _target$current;\n\n    (_target$current = target.current) === null || _target$current === void 0 ? void 0 : _target$current.scrollIntoView({\n      behavior: \"smooth\",\n      block: \"start\",\n      inline: \"nearest\"\n    });\n  };\n\n  const allRefs = useRef([homeRef, aboutRef, projectRef, contactRef]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(BackgroundCanvas, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Navbar, {\n      darkMode: darkMode,\n      handleScroll: handleScroll,\n      allRefs: allRefs\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `app ${darkMode ? \"dark\" : \"\"}`,\n      children: [/*#__PURE__*/_jsxDEV(Home, {\n        darkMode: darkMode,\n        homeRef: homeRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(About, {\n        darkMode: darkMode,\n        aboutRef: aboutRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Projects, {\n        darkMode: darkMode,\n        projectRef: projectRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Contact, {\n        darkMode: darkMode,\n        contactRef: contactRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DarkToggle, {\n      darkMode: darkMode,\n      handleDarkToggle: handleDarkToggle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"3fi5HCVrq3bGQGaVgqAvzJZ50Ew=\");\n\n_c = App;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/lawrencehan/Documents/GitHub/hanlarry/src/App.tsx"],"names":["React","useState","useRef","BackgroundCanvas","Navbar","Home","About","Projects","Contact","DarkToggle","App","isDarkMode","window","matchMedia","matches","darkMode","setDarkMode","handleDarkToggle","event","prevDarkMode","stopPropagation","homeRef","aboutRef","projectRef","contactRef","handleScroll","target","current","scrollIntoView","behavior","block","inline","allRefs"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,MAAzB,QAAuC,OAAvC;AACA,OAAO,WAAP;AACA,OAAOC,gBAAP,MAA6B,0CAA7B;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,QAAP,MAAqB,2BAArB;AACA,OAAOC,OAAP,MAAoB,yBAApB;AACA,OAAOC,UAAP,MAAuB,oCAAvB;;;AAEA,eAAe,SAASC,GAAT,GAAe;AAAA;;AAC5B;AACA,QAAMC,UAAU,GAAGC,MAAM,CAACC,UAAP,IAAqBD,MAAM,CAACC,UAAP,CAAkB,8BAAlB,EAAkDC,OAA1F;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0Bf,QAAQ,CAAUU,UAAV,CAAxC;;AACA,QAAMM,gBAAgB,GAAIC,KAAD,IAA6B;AACpDF,IAAAA,WAAW,CAAEG,YAAY,IAAI,CAACA,YAAnB,CAAX;AACAD,IAAAA,KAAK,CAACE,eAAN;AACD,GAHD,CAJ4B,CAS5B;;;AACA,QAAMC,OAAO,GAAGnB,MAAM,CAAwB,IAAxB,CAAtB;AACA,QAAMoB,QAAQ,GAAGpB,MAAM,CAAwB,IAAxB,CAAvB;AACA,QAAMqB,UAAU,GAAGrB,MAAM,CAAwB,IAAxB,CAAzB;AACA,QAAMsB,UAAU,GAAGtB,MAAM,CAAwB,IAAxB,CAAzB;;AACA,QAAMuB,YAAY,GAAIC,MAAD,IAA0D;AAAA;;AAC7E,uBAAAA,MAAM,CAACC,OAAP,oEAAgBC,cAAhB,CAA+B;AAC7BC,MAAAA,QAAQ,EAAE,QADmB;AAE7BC,MAAAA,KAAK,EAAE,OAFsB;AAG7BC,MAAAA,MAAM,EAAE;AAHqB,KAA/B;AAKD,GAND;;AAOA,QAAMC,OAAO,GAAG9B,MAAM,CAAC,CAACmB,OAAD,EAAUC,QAAV,EAAoBC,UAApB,EAAgCC,UAAhC,CAAD,CAAtB;AAEA,sBACE;AAAA,4BACE,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,MAAD;AAAQ,MAAA,QAAQ,EAAET,QAAlB;AAA4B,MAAA,YAAY,EAAEU,YAA1C;AAAwD,MAAA,OAAO,EAAEO;AAAjE;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAK,MAAA,SAAS,EAAG,OAAMjB,QAAQ,GAAG,MAAH,GAAY,EAAI,EAA/C;AAAA,8BACE,QAAC,IAAD;AAAM,QAAA,QAAQ,EAAEA,QAAhB;AAA0B,QAAA,OAAO,EAAEM;AAAnC;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,KAAD;AAAO,QAAA,QAAQ,EAAEN,QAAjB;AAA2B,QAAA,QAAQ,EAAEO;AAArC;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE,QAAC,QAAD;AAAU,QAAA,QAAQ,EAAEP,QAApB;AAA8B,QAAA,UAAU,EAAEQ;AAA1C;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE,QAAC,OAAD;AAAS,QAAA,QAAQ,EAAER,QAAnB;AAA6B,QAAA,UAAU,EAAES;AAAzC;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,eASE,QAAC,UAAD;AAAY,MAAA,QAAQ,EAAET,QAAtB;AAAgC,MAAA,gBAAgB,EAAEE;AAAlD;AAAA;AAAA;AAAA;AAAA,YATF;AAAA,kBADF;AAaD;;GApCuBP,G;;KAAAA,G;AAoCvB","sourcesContent":["import React, {useState, useRef } from 'react';\nimport './App.css';\nimport BackgroundCanvas from './components/background/BackgroundCanvas';\nimport Navbar from './components/navbar/Navbar';\nimport Home from './pages/home/Home';\nimport About from './pages/about/About';\nimport Projects from './pages/projects/Projects';\nimport Contact from './pages/contact/Contact';\nimport DarkToggle from './components/darkToggle/DarkToggle';\n\nexport default function App() {\n  // Dark-Mode toggle and respective state\n  const isDarkMode = window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches;\n  const [darkMode, setDarkMode] = useState<boolean>(isDarkMode)\n  const handleDarkToggle = (event:React.ChangeEvent) => {\n    setDarkMode( prevDarkMode => !prevDarkMode )\n    event.stopPropagation()\n  }\n\n  // Scrolling References\n  const homeRef = useRef<null | HTMLDivElement>(null); \n  const aboutRef = useRef<null | HTMLDivElement>(null);\n  const projectRef = useRef<null | HTMLDivElement>(null);\n  const contactRef = useRef<null | HTMLDivElement>(null);\n  const handleScroll = (target:React.MutableRefObject<HTMLDivElement | null>) => {\n    target.current?.scrollIntoView({ \n      behavior: \"smooth\",\n      block: \"start\",\n      inline: \"nearest\"\n     })\n  }\n  const allRefs = useRef([homeRef, aboutRef, projectRef, contactRef])\n\n  return (\n    <>\n      <BackgroundCanvas />\n      <Navbar darkMode={darkMode} handleScroll={handleScroll} allRefs={allRefs}/>\n      <div className={`app ${darkMode ? \"dark\" : \"\" }`}>\n        <Home darkMode={darkMode} homeRef={homeRef} />\n        <About darkMode={darkMode} aboutRef={aboutRef} />\n        <Projects darkMode={darkMode} projectRef={projectRef} />\n        <Contact darkMode={darkMode} contactRef={contactRef} />\n      </div>\n      <DarkToggle darkMode={darkMode} handleDarkToggle={handleDarkToggle}/> \n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}