{"ast":null,"code":"var _jsxFileName = \"/Users/lawrencehan/Documents/GitHub/hanlarry/src/components/background/BackgroundCanvas.tsx\";\nimport React, { useRef } from 'react';\nimport { Canvas, useFrame } from '@react-three/fiber';\nimport './background.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function BackgroundCanvas() {\n  var _s = $RefreshSig$();\n\n  function Sphere(props) {\n    _s();\n\n    const mesh = useRef(null);\n    useFrame((state, delta) => mesh.current.rotation.x += 0.01);\n    return /*#__PURE__*/_jsxDEV(\"mesh\", { ...props,\n      ref: mesh,\n      children: [/*#__PURE__*/_jsxDEV(\"sphereGeometry\", {\n        args: [15, 32, 16]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"meshStandardMaterial\", {\n        color: 'white'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 11\n    }, this);\n  }\n\n  _s(Sphere, \"aboyJ/StuJfvpd16sdbtizo3yWA=\", false, function () {\n    return [useFrame];\n  });\n\n  return (\n    /*#__PURE__*/\n    // <div className='bg' id=\"canvas-container\">\n    _jsxDEV(Canvas, {\n      children: /*#__PURE__*/_jsxDEV(\"mesh\", {\n        position: [0, 0, 0],\n        children: [/*#__PURE__*/_jsxDEV(\"boxGeometry\", {\n          attach: \"geometry\",\n          args: [100, 100, 100]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"meshStandardMaterial\", {\n          attach: \"material\",\n          color: \"#FFAE00\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this) //</div>\n\n  );\n}\n_c = BackgroundCanvas;\n\nvar _c;\n\n$RefreshReg$(_c, \"BackgroundCanvas\");","map":{"version":3,"sources":["/Users/lawrencehan/Documents/GitHub/hanlarry/src/components/background/BackgroundCanvas.tsx"],"names":["React","useRef","Canvas","useFrame","BackgroundCanvas","Sphere","props","mesh","state","delta","current","rotation","x"],"mappings":";AAAA,OAAOA,KAAP,IAA0BC,MAA1B,QAAwC,OAAxC;AAEA,SAASC,MAAT,EAAiBC,QAAjB,QAAiC,oBAAjC;AACA,OAAO,kBAAP;;AAGA,eAAe,SAASC,gBAAT,GAA4B;AAAA;;AACvC,WAASC,MAAT,CAAgBC,KAAhB,EAAsD;AAAA;;AAClD,UAAMC,IAAI,GAAGN,MAAM,CAAa,IAAb,CAAnB;AACAE,IAAAA,QAAQ,CAAC,CAACK,KAAD,EAAQC,KAAR,KAAmBF,IAAI,CAACG,OAAL,CAAaC,QAAb,CAAsBC,CAAtB,IAA2B,IAA/C,CAAR;AACA,wBACE,qBACMN,KADN;AAEE,MAAA,GAAG,EAAEC,IAFP;AAAA,8BAGE;AAAgB,QAAA,IAAI,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT;AAAtB;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE;AAAsB,QAAA,KAAK,EAAE;AAA7B;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAQD;;AAZoC,KAC9BF,MAD8B;AAAA,YAGnCF,QAHmC;AAAA;;AAevC;AAAA;AACI;AACI,YAAC,MAAD;AAAA,6BAKI;AAAM,QAAA,QAAQ,EAAE,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,CAAhB;AAAA,gCACI;AAAa,UAAA,MAAM,EAAC,UAApB;AAA+B,UAAA,IAAI,EAAE,CAAC,GAAD,EAAK,GAAL,EAAS,GAAT;AAArC;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAsB,UAAA,MAAM,EAAC,UAA7B;AAAwC,UAAA,KAAK,EAAC;AAA9C;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AALJ;AAAA;AAAA;AAAA;AAAA,YAFR,CAaI;;AAbJ;AAeH;KA9BuBC,gB","sourcesContent":["import React, { useState, useRef } from 'react';\nimport * as THREE from 'three';\nimport { Canvas, useFrame } from '@react-three/fiber';\nimport './background.css';\n\n\nexport default function BackgroundCanvas() {\n    function Sphere(props: JSX.IntrinsicElements['mesh']) {\n        const mesh = useRef<THREE.Mesh>(null!)\n        useFrame((state, delta) => (mesh.current.rotation.x += 0.01))\n        return (\n          <mesh\n            {...props}\n            ref={mesh}>\n            <sphereGeometry args={[15, 32, 16]} />\n            <meshStandardMaterial color={'white'} />\n          </mesh>\n        )\n      }\n    \n    \n    return (\n        // <div className='bg' id=\"canvas-container\">\n            <Canvas>\n                {/* <ambientLight />\n                <pointLight position={[10, 10, 10]} />\n\n                <Sphere position={[0, 0, 0]}/> */}\n                <mesh position={[0,0,0]}>\n                    <boxGeometry attach='geometry' args={[100,100,100]} />\n                    <meshStandardMaterial attach='material' color=\"#FFAE00\" />\n\n                </mesh>\n            </Canvas>\n        //</div>\n    )\n}"]},"metadata":{},"sourceType":"module"}