{"ast":null,"code":"var _jsxFileName = \"/Users/lawrencehan/Documents/GitHub/hanlarry/src/components/background/BackgroundCanvas.tsx\";\nimport React, { useRef } from 'react';\nimport { Canvas, useFrame } from '@react-three/fiber';\nimport './background.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function BackgroundCanvas() {\n  var _s = $RefreshSig$();\n\n  function Sphere(props) {\n    _s();\n\n    const mesh = useRef(null);\n    useFrame((state, delta) => mesh.current.rotation.x += 0.01);\n    useFrame((state, delta) => mesh.current.rotation.y = 0.01);\n    return /*#__PURE__*/_jsxDEV(\"mesh\", { ...props,\n      ref: mesh,\n      children: [/*#__PURE__*/_jsxDEV(\"sphereGeometry\", {\n        args: [1, 32, 16]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"meshStandardMaterial\", {\n        color: \"#FFAE00\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 11\n    }, this);\n  }\n\n  _s(Sphere, \"FIkUQYXLgs6Y9py+5HT08fVwj9E=\", false, function () {\n    return [useFrame, useFrame];\n  });\n\n  return (\n    /*#__PURE__*/\n    // <div className='bg' id=\"canvas-container\">\n    // <Canvas>\n    //     {/* <ambientLight />\n    //     <pointLight position={[10, 10, 10]} />\n    //     <Sphere position={[0, 0, 0]}/> */}\n    //     <mesh position={[0,0,0]}>\n    //         <boxGeometry attach='geometry' args={[100,100,100]} />\n    //         <meshStandardMaterial attach='material' color=\"#FFAE00\" />\n    //     </mesh>\n    // </Canvas>\n    //</div>\n    _jsxDEV(\"div\", {\n      className: \"bg\",\n      id: \"canvas-container\",\n      children: /*#__PURE__*/_jsxDEV(Canvas, {\n        children: [/*#__PURE__*/_jsxDEV(\"ambientLight\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"pointLight\", {\n          intensity: 1.0,\n          position: [20, 10, 10]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Sphere, {\n          position: [0, 0, 0]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this)\n  );\n}\n_c = BackgroundCanvas;\n\nvar _c;\n\n$RefreshReg$(_c, \"BackgroundCanvas\");","map":{"version":3,"sources":["/Users/lawrencehan/Documents/GitHub/hanlarry/src/components/background/BackgroundCanvas.tsx"],"names":["React","useRef","Canvas","useFrame","BackgroundCanvas","Sphere","props","mesh","state","delta","current","rotation","x","y"],"mappings":";AAAA,OAAOA,KAAP,IAA0BC,MAA1B,QAAwC,OAAxC;AAEA,SAASC,MAAT,EAAiBC,QAAjB,QAAiC,oBAAjC;AACA,OAAO,kBAAP;;AAGA,eAAe,SAASC,gBAAT,GAA4B;AAAA;;AACvC,WAASC,MAAT,CAAgBC,KAAhB,EAAsD;AAAA;;AAClD,UAAMC,IAAI,GAAGN,MAAM,CAAa,IAAb,CAAnB;AACAE,IAAAA,QAAQ,CAAC,CAACK,KAAD,EAAQC,KAAR,KAAmBF,IAAI,CAACG,OAAL,CAAaC,QAAb,CAAsBC,CAAtB,IAA2B,IAA/C,CAAR;AACAT,IAAAA,QAAQ,CAAC,CAACK,KAAD,EAAQC,KAAR,KAAmBF,IAAI,CAACG,OAAL,CAAaC,QAAb,CAAsBE,CAAtB,GAA0B,IAA9C,CAAR;AACA,wBACE,qBACMP,KADN;AAEE,MAAA,GAAG,EAAEC,IAFP;AAAA,8BAGE;AAAgB,QAAA,IAAI,EAAE,CAAC,CAAD,EAAI,EAAJ,EAAQ,EAAR;AAAtB;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE;AAAsB,QAAA,KAAK,EAAC;AAA5B;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAQD;;AAboC,KAC9BF,MAD8B;AAAA,YAGnCF,QAHmC,EAInCA,QAJmC;AAAA;;AAgBvC;AAAA;AACI;AACI;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACJ;AACA;AAAK,MAAA,SAAS,EAAC,IAAf;AAAoB,MAAA,EAAE,EAAC,kBAAvB;AAAA,6BACI,QAAC,MAAD;AAAA,gCAQI;AAAA;AAAA;AAAA;AAAA,gBARJ,eASI;AAAY,UAAA,SAAS,EAAE,GAAvB;AAA4B,UAAA,QAAQ,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT;AAAtC;AAAA;AAAA;AAAA;AAAA,gBATJ,eAUI,QAAC,MAAD;AAAQ,UAAA,QAAQ,EAAE,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL;AAAlB;AAAA;AAAA;AAAA;AAAA,gBAVJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AAdJ;AA6BH;KA7CuBC,gB","sourcesContent":["import React, { useState, useRef } from 'react';\nimport * as THREE from 'three';\nimport { Canvas, useFrame } from '@react-three/fiber';\nimport './background.css';\n\n\nexport default function BackgroundCanvas() {\n    function Sphere(props: JSX.IntrinsicElements['mesh']) {\n        const mesh = useRef<THREE.Mesh>(null!)\n        useFrame((state, delta) => (mesh.current.rotation.x += 0.01))\n        useFrame((state, delta) => (mesh.current.rotation.y = 0.01))\n        return (\n          <mesh\n            {...props}\n            ref={mesh}>\n            <sphereGeometry args={[1, 32, 16]} />\n            <meshStandardMaterial color=\"#FFAE00\" />\n          </mesh>\n        )\n      }\n    \n    \n    return (\n        // <div className='bg' id=\"canvas-container\">\n            // <Canvas>\n            //     {/* <ambientLight />\n            //     <pointLight position={[10, 10, 10]} />\n\n            //     <Sphere position={[0, 0, 0]}/> */}\n            //     <mesh position={[0,0,0]}>\n            //         <boxGeometry attach='geometry' args={[100,100,100]} />\n            //         <meshStandardMaterial attach='material' color=\"#FFAE00\" />\n\n            //     </mesh>\n            // </Canvas>\n        //</div>\n        <div className='bg' id='canvas-container'>\n            <Canvas>\n                {/* We declare three.js object lowerCase without importing */}\n                {/* <ambientLight intensity={0.3} color=\"#FFFFFF\" />\n                <pointLight intensity={1.0} position={[10, 10, 10]} /> */}\n                {/* <mesh position={[0,0,-1]}>\n                    <boxGeometry args={[1,1,1]} />\n                    <meshStandardMaterial color=\"#FFAE00\" />\n                </mesh> */}\n                <ambientLight />\n                <pointLight intensity={1.0} position={[20, 10, 10]} />\n                <Sphere position={[0,0,0]} />\n            </Canvas>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}