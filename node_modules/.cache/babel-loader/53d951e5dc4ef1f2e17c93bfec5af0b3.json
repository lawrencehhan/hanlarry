{"ast":null,"code":"var _jsxFileName = \"/Users/lawrencehan/Documents/GitHub/hanlarry/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './App.css';\nimport BackgroundCanvas from './components/background/BackgroundCanvas';\nimport Navbar from './components/navbar/Navbar';\nimport Home from './pages/home/Home';\nimport About from './pages/about/About';\nimport DarkToggle from './components/darkToggle/DarkToggle';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n\n  const isDarkMode = window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches;\n  const [darkMode, setDarkMode] = useState(isDarkMode);\n\n  const handleDarkToggle = event => {\n    setDarkMode(prevDarkMode => !prevDarkMode);\n    event.stopPropagation();\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(BackgroundCanvas, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Navbar, {\n      darkMode: darkMode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `app ${darkMode ? \"dark\" : \"\"}`,\n      children: [/*#__PURE__*/_jsxDEV(Home, {\n        darkMode: darkMode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(About, {\n        darkMode: darkMode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DarkToggle, {\n      darkMode: darkMode,\n      handleDarkToggle: handleDarkToggle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"V2XiMLgD2zN6fhs5rr+J1Fmp2xE=\");\n\n_c = App;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/lawrencehan/Documents/GitHub/hanlarry/src/App.tsx"],"names":["React","useState","BackgroundCanvas","Navbar","Home","About","DarkToggle","App","isDarkMode","window","matchMedia","matches","darkMode","setDarkMode","handleDarkToggle","event","prevDarkMode","stopPropagation"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAAsD,OAAtD;AAEA,OAAO,WAAP;AACA,OAAOC,gBAAP,MAA6B,0CAA7B;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,UAAP,MAAuB,oCAAvB;;;AAEA,eAAe,SAASC,GAAT,GAAe;AAAA;;AAE5B,QAAMC,UAAU,GAAGC,MAAM,CAACC,UAAP,IAAqBD,MAAM,CAACC,UAAP,CAAkB,8BAAlB,EAAkDC,OAA1F;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BZ,QAAQ,CAAUO,UAAV,CAAxC;;AACA,QAAMM,gBAAgB,GAAIC,KAAD,IAA6B;AACpDF,IAAAA,WAAW,CAAEG,YAAY,IAAI,CAACA,YAAnB,CAAX;AACAD,IAAAA,KAAK,CAACE,eAAN;AACD,GAHD;;AAMA,sBACE;AAAA,4BACE,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,MAAD;AAAQ,MAAA,QAAQ,EAAEL;AAAlB;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAK,MAAA,SAAS,EAAG,OAAMA,QAAQ,GAAG,MAAH,GAAY,EAAI,EAA/C;AAAA,8BACE,QAAC,IAAD;AAAM,QAAA,QAAQ,EAAEA;AAAhB;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,KAAD;AAAO,QAAA,QAAQ,EAAEA;AAAjB;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,eAOE,QAAC,UAAD;AAAY,MAAA,QAAQ,EAAEA,QAAtB;AAAgC,MAAA,gBAAgB,EAAEE;AAAlD;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA,kBADF;AAWD;;GArBuBP,G;;KAAAA,G;AAqBvB","sourcesContent":["import React, {useState, useEffect, useCallback} from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport './App.css';\nimport BackgroundCanvas from './components/background/BackgroundCanvas';\nimport Navbar from './components/navbar/Navbar';\nimport Home from './pages/home/Home';\nimport About from './pages/about/About';\nimport DarkToggle from './components/darkToggle/DarkToggle';\n\nexport default function App() {\n\n  const isDarkMode = window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches;\n  const [darkMode, setDarkMode] = useState<boolean>(isDarkMode)\n  const handleDarkToggle = (event:React.ChangeEvent) => {\n    setDarkMode( prevDarkMode => !prevDarkMode )\n    event.stopPropagation()\n  }\n\n\n  return (\n    <>\n      <BackgroundCanvas />\n      <Navbar darkMode={darkMode} />\n      <div className={`app ${darkMode ? \"dark\" : \"\" }`}>\n        <Home darkMode={darkMode} />\n        <About darkMode={darkMode} />\n      </div>\n      <DarkToggle darkMode={darkMode} handleDarkToggle={handleDarkToggle}/> \n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}