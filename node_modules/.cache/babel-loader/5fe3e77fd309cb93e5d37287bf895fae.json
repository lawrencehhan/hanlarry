{"ast":null,"code":"var _jsxFileName = \"/Users/lawrencehan/Documents/GitHub/hanlarry/src/components/background/BackgroundCanvas.tsx\";\nimport React, { useRef } from 'react';\nimport { Canvas, useFrame } from '@react-three/fiber';\nimport './background.css';\nimport { DoubleSide, FrontSide } from 'three';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function BackgroundCanvas() {\n  var _s = $RefreshSig$(),\n      _s2 = $RefreshSig$(),\n      _s3 = $RefreshSig$(),\n      _s4 = $RefreshSig$();\n\n  // When forming a MESH with useFrame(), it must be its own component, outside of App()\n  function Sphere(props) {\n    _s();\n\n    const mesh = useRef(null);\n    useFrame((state, delta) => mesh.current.rotation.x += 0.01);\n    useFrame((state, delta) => mesh.current.rotation.y += 0.01);\n    return /*#__PURE__*/_jsxDEV(\"mesh\", { ...props,\n      ref: mesh,\n      children: [/*#__PURE__*/_jsxDEV(\"sphereGeometry\", {\n        args: [1, 128, 128]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 13\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"meshNormalMaterial\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 11\n    }, this);\n  }\n\n  _s(Sphere, \"FIkUQYXLgs6Y9py+5HT08fVwj9E=\", false, function () {\n    return [useFrame, useFrame];\n  });\n\n  function Skeleton(props) {\n    _s2();\n\n    const mesh = useRef(null);\n    useFrame((state, delta) => mesh.current.rotation.x -= 0.005);\n    useFrame((state, delta) => mesh.current.rotation.y -= 0.005);\n    return /*#__PURE__*/_jsxDEV(\"mesh\", { ...props,\n      ref: mesh,\n      children: [/*#__PURE__*/_jsxDEV(\"icosahedronGeometry\", {\n        args: [1.5, 2]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), \"  \", /*#__PURE__*/_jsxDEV(\"meshPhongMaterial\", {\n        color: \"#ffffff\",\n        wireframe: true,\n        wireframeLinewidth: 200,\n        side: DoubleSide\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this);\n  }\n\n  _s2(Skeleton, \"FIkUQYXLgs6Y9py+5HT08fVwj9E=\", false, function () {\n    return [useFrame, useFrame];\n  });\n\n  function Plane(props) {\n    _s3();\n\n    const meshPlane = useRef(null); // useFrame((state, delta) => (meshPlane.current.rotation.x = Math.PI / 180 * -90))\n\n    return /*#__PURE__*/_jsxDEV(\"mesh\", { ...props,\n      ref: meshPlane,\n      children: [/*#__PURE__*/_jsxDEV(\"planeGeometry\", {\n        attach: \"geometry\",\n        args: [100, 100]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), \"  \", /*#__PURE__*/_jsxDEV(\"meshNormalMaterial\", {\n        attach: \"material\",\n        side: DoubleSide,\n        transparent: true,\n        opacity: 0.3\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this);\n  }\n\n  _s3(Plane, \"i0FhoLYRwqolUHtM1b5wa6m35WI=\");\n\n  const createBubbleGeo = () => {\n    const bubbleGeo = /*#__PURE__*/_jsxDEV(\"sphereGeometry\", {\n      args: [1, 128, 128]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 27\n    }, this);\n  };\n\n  function Test(props) {\n    _s4();\n\n    const mesh = useRef(null);\n    useFrame((state, delta) => mesh.current.rotation.x += 0.01);\n    useFrame((state, delta) => mesh.current.rotation.y += 0.01);\n    return /*#__PURE__*/_jsxDEV(\"mesh\", { ...props,\n      ref: mesh,\n      castShadow: true,\n      receiveShadow: false,\n      children: [/*#__PURE__*/_jsxDEV(\"sphereGeometry\", {\n        args: [10, 128, 128]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"meshStandardMaterial\", {\n        color: 0xB5D5FE,\n        roughness: 0.6,\n        metalness: 0.2,\n        side: FrontSide\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }, this);\n  }\n\n  _s4(Test, \"FIkUQYXLgs6Y9py+5HT08fVwj9E=\", false, function () {\n    return [useFrame, useFrame];\n  });\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg\",\n    id: \"canvas-container\",\n    children: /*#__PURE__*/_jsxDEV(Canvas, {\n      camera: {\n        position: [0, 0, 300]\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"ambientLight\", {\n        intensity: 0.3\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"pointLight\", {\n        intensity: 0.8,\n        position: [10, 10, 15]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Skeleton, {\n        position: [0, 0, 0]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Plane, {\n        position: [0, 0, -200]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Test, {\n        position: [0, 0, 0]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 9\n  }, this);\n}\n_c = BackgroundCanvas;\n\nvar _c;\n\n$RefreshReg$(_c, \"BackgroundCanvas\");","map":{"version":3,"sources":["/Users/lawrencehan/Documents/GitHub/hanlarry/src/components/background/BackgroundCanvas.tsx"],"names":["React","useRef","Canvas","useFrame","DoubleSide","FrontSide","BackgroundCanvas","Sphere","props","mesh","state","delta","current","rotation","x","y","Skeleton","Plane","meshPlane","createBubbleGeo","bubbleGeo","Test","position"],"mappings":"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","sourcesContent":["import React, { useState, useRef } from 'react';\nimport * as THREE from 'three';\nimport { Canvas, useFrame } from '@react-three/fiber';\nimport './background.css';\nimport { DoubleSide, FrontSide } from 'three';\n\n\nexport default function BackgroundCanvas() {\n    // When forming a MESH with useFrame(), it must be its own component, outside of App()\n    function Sphere(props: JSX.IntrinsicElements['mesh']) {\n        const mesh = useRef<THREE.Mesh>(null!)\n        useFrame((state, delta) => (mesh.current.rotation.x += 0.01))\n        useFrame((state, delta) => (mesh.current.rotation.y += 0.01))\n        return (\n          <mesh\n            {...props}\n            ref={mesh}>\n            <sphereGeometry args={[1,128,128]} /> {/* radius, widthSeg, heightSeg */}\n            <meshNormalMaterial />\n          </mesh>\n        )\n    }\n    function Skeleton(props: JSX.IntrinsicElements['mesh']) {\n        const mesh = useRef<THREE.Mesh>(null!)\n        useFrame((state, delta) => (mesh.current.rotation.x -= 0.005))\n        useFrame((state, delta) => (mesh.current.rotation.y -= 0.005))\n        return (\n            <mesh\n                {...props}\n                ref={mesh}>\n                <icosahedronGeometry args={[1.5, 2]} />  {/* radius, detail */}\n                <meshPhongMaterial color=\"#ffffff\" wireframe={true} wireframeLinewidth={200} side={DoubleSide} />\n            </mesh>\n        )\n    }\n    function Plane(props: JSX.IntrinsicElements['mesh']) {\n        const meshPlane = useRef<THREE.Mesh>(null!)\n        // useFrame((state, delta) => (meshPlane.current.rotation.x = Math.PI / 180 * -90))\n\n        return (\n            <mesh\n                {...props}\n                ref={meshPlane}>\n                <planeGeometry attach=\"geometry\" args={[100, 100]} />  {/* radius, detail */}\n                <meshNormalMaterial attach=\"material\" side={DoubleSide} transparent={true} opacity={0.3} />\n            </mesh>\n        )\n    }\n    \n\n    const createBubbleGeo = () => {\n        const bubbleGeo = <sphereGeometry args={[1,128,128]} />\n        \n    }\n\n    function Test(props: JSX.IntrinsicElements['mesh']) {\n        const mesh = useRef<THREE.Mesh>(null!)\n        useFrame((state, delta) => (mesh.current.rotation.x += 0.01))\n        useFrame((state, delta) => (mesh.current.rotation.y += 0.01))\n        return (\n          <mesh\n            {...props}\n            ref={mesh}\n            castShadow={true}\n            receiveShadow={false}>\n            <sphereGeometry args={[10,128,128]} /> {/* radius, widthSeg, heightSeg */}\n            <meshStandardMaterial \n                color={0xB5D5FE}\n                roughness={0.6} \n                metalness={0.2} \n                side={FrontSide} />\n          </mesh>\n        )\n    }\n    \n    \n    return (\n        <div className='bg' id='canvas-container'>\n            {/* default: camera={ fov: 75, near: 0.1, far: 1000, position: [0, 0, 5] } */}\n            <Canvas camera={{position:[0,0,300]}}>\n                <ambientLight intensity={0.3}/>\n                <pointLight intensity={0.8} position={[10, 10, 15]}/>\n                {/* <Sphere position={[0,0,0]} /> */}\n                <Skeleton position={[0,0,0]} />\n                <Plane position={[0,0,-200]} />\n                <Test position={[0,0,0]} />\n            </Canvas>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}