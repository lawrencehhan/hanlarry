[{"/Users/lawrencehan/Documents/GitHub/hanlarry/src/index.tsx":"1","/Users/lawrencehan/Documents/GitHub/hanlarry/src/App.tsx":"2","/Users/lawrencehan/Documents/GitHub/hanlarry/src/pages/home/Home.tsx":"3","/Users/lawrencehan/Documents/GitHub/hanlarry/src/pages/intro/Intro.tsx":"4","/Users/lawrencehan/Documents/GitHub/hanlarry/src/assets/Glasses.tsx":"5","/Users/lawrencehan/Documents/GitHub/hanlarry/src/components/darkToggle/DarkToggle.tsx":"6"},{"size":232,"mtime":1650874284785,"results":"7","hashOfConfig":"8"},{"size":1328,"mtime":1650879931813,"results":"9","hashOfConfig":"8"},{"size":384,"mtime":1650876239445,"results":"10","hashOfConfig":"8"},{"size":1258,"mtime":1650878250317,"results":"11","hashOfConfig":"8"},{"size":2486,"mtime":1650880114621,"results":"12","hashOfConfig":"8"},{"size":927,"mtime":1650875003505,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"147rb72",{"filePath":"17","messages":"18","suppressedMessages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20","usedDeprecatedRules":"21"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"21"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},"/Users/lawrencehan/Documents/GitHub/hanlarry/src/index.tsx",[],[],"/Users/lawrencehan/Documents/GitHub/hanlarry/src/App.tsx",["35"],[],"import React, {useState, useEffect, useCallback} from 'react';\nimport './App.css';\nimport Intro from './pages/intro/Intro'\nimport Home from './pages/home/Home'\nimport DarkToggle from './components/darkToggle/DarkToggle';\n\nexport default function App() {\n  // Handling en tering the home page from the intro section\n  const [enter, setEnter] = useState<boolean>(false);\n  const handleEnter = useCallback(() => {\n    // console.log(event.target.)\n    setEnter(prevEnter => {\n      return prevEnter ? prevEnter : !prevEnter\n    })\n  }, []);\n  useEffect(() => {\n    let appBody = document.getElementsByClassName(\"app\")[0]\n    appBody.addEventListener(\"click\", handleEnter)\n    if (enter) {\n      console.log('Cleaning eventListener for entrance...')\n      appBody.removeEventListener(\"click\", handleEnter)\n    }\n  }, [enter])\n\n  const [darkMode, setDarkMode] = useState<boolean>(false)\n  const handleDarkToggle = (event:React.ChangeEvent) => {\n    setDarkMode( prevDarkMode => !prevDarkMode )\n    console.log('in THE TOGGLE BUTTON')\n    event.stopPropagation()\n  }\n\n  return (\n    <>\n      <div className={`app ${darkMode ? \"dark\" : \"\" }`}>\n        { enter ? <Home glassesDark={darkMode}/> : <Intro glassesDark={darkMode}/> }\n      </div>\n      <DarkToggle darkMode={darkMode} handleDarkToggle={handleDarkToggle}/> \n    </>\n  );\n};\n",[],"/Users/lawrencehan/Documents/GitHub/hanlarry/src/pages/home/Home.tsx",["36"],[],"import React from \"react\";\nimport { motion } from \"framer-motion\"\nimport './home.css';\nimport Glasses from '../../assets/Glasses';\n\ninterface GlassesProp {\n    glassesDark: boolean;\n}\n\nexport default function Home(props:GlassesProp) {\n    return (\n        <div className=\"glasses-container\">\n            <Glasses animated={false} darkMode={props.glassesDark}/>\n        </div>\n    )\n};","/Users/lawrencehan/Documents/GitHub/hanlarry/src/pages/intro/Intro.tsx",[],[],"/Users/lawrencehan/Documents/GitHub/hanlarry/src/assets/Glasses.tsx",[],[],"/Users/lawrencehan/Documents/GitHub/hanlarry/src/components/darkToggle/DarkToggle.tsx",[],[],{"ruleId":"37","severity":1,"message":"38","line":23,"column":6,"nodeType":"39","endLine":23,"endColumn":13,"suggestions":"40"},{"ruleId":"41","severity":1,"message":"42","line":2,"column":10,"nodeType":"43","messageId":"44","endLine":2,"endColumn":16},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'handleEnter'. Either include it or remove the dependency array.","ArrayExpression",["45"],"@typescript-eslint/no-unused-vars","'motion' is defined but never used.","Identifier","unusedVar",{"desc":"46","fix":"47"},"Update the dependencies array to be: [enter, handleEnter]",{"range":"48","text":"49"},[813,820],"[enter, handleEnter]"]