[{"/Users/lawrencehan/Documents/GitHub/hanlarry/src/index.tsx":"1","/Users/lawrencehan/Documents/GitHub/hanlarry/src/App.tsx":"2","/Users/lawrencehan/Documents/GitHub/hanlarry/src/pages/home/Home.tsx":"3","/Users/lawrencehan/Documents/GitHub/hanlarry/src/pages/intro/Intro.tsx":"4","/Users/lawrencehan/Documents/GitHub/hanlarry/src/assets/Glasses.tsx":"5","/Users/lawrencehan/Documents/GitHub/hanlarry/src/components/darkToggle/DarkToggle.tsx":"6","/Users/lawrencehan/Documents/GitHub/hanlarry/src/assets/Disk.tsx":"7","/Users/lawrencehan/Documents/GitHub/hanlarry/src/pages/home/HomeProfile.tsx":"8","/Users/lawrencehan/Documents/GitHub/hanlarry/src/pages/home/HomeText.tsx":"9","/Users/lawrencehan/Documents/GitHub/hanlarry/src/assets/Circle.tsx":"10","/Users/lawrencehan/Documents/GitHub/hanlarry/src/assets/ProfileImg.tsx":"11","/Users/lawrencehan/Documents/GitHub/hanlarry/src/pages/about/About.tsx":"12","/Users/lawrencehan/Documents/GitHub/hanlarry/src/components/navbar/Navbar.tsx":"13","/Users/lawrencehan/Documents/GitHub/hanlarry/src/components/background/BackgroundCanvas.tsx":"14","/Users/lawrencehan/Documents/GitHub/hanlarry/src/pages/contact/Contact.tsx":"15","/Users/lawrencehan/Documents/GitHub/hanlarry/src/pages/projects/Projects.tsx":"16","/Users/lawrencehan/Documents/GitHub/hanlarry/src/hooks/useOnScreen.tsx":"17"},{"size":232,"mtime":1650874284785,"results":"18","hashOfConfig":"19"},{"size":3144,"mtime":1651631809056,"results":"20","hashOfConfig":"19"},{"size":904,"mtime":1651388271937,"results":"21","hashOfConfig":"19"},{"size":2368,"mtime":1650957490214,"results":"22","hashOfConfig":"19"},{"size":3091,"mtime":1651311588105,"results":"23","hashOfConfig":"19"},{"size":927,"mtime":1650875003505,"results":"24","hashOfConfig":"19"},{"size":3938,"mtime":1651310220932,"results":"25","hashOfConfig":"19"},{"size":980,"mtime":1651302407646,"results":"26","hashOfConfig":"19"},{"size":2689,"mtime":1651311628617,"results":"27","hashOfConfig":"19"},{"size":1583,"mtime":1651310530747,"results":"28","hashOfConfig":"19"},{"size":765,"mtime":1651310409740,"results":"29","hashOfConfig":"19"},{"size":350,"mtime":1651388280726,"results":"30","hashOfConfig":"19"},{"size":703,"mtime":1651390647530,"results":"31","hashOfConfig":"19"},{"size":2794,"mtime":1651654582737,"results":"32","hashOfConfig":"19"},{"size":368,"mtime":1651388381276,"results":"33","hashOfConfig":"19"},{"size":374,"mtime":1651390760048,"results":"34","hashOfConfig":"19"},{"size":694,"mtime":1651393132211,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},"147rb72",{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"44"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"39"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"39"},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"39"},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"39"},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"39"},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"39"},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"86"},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90"},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"39"},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"39"},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/lawrencehan/Documents/GitHub/hanlarry/src/index.tsx",[],[],[],"/Users/lawrencehan/Documents/GitHub/hanlarry/src/App.tsx",["102","103","104","105","106","107","108","109","110","111","112","113","114","115"],[],"import React, {useState, useRef } from 'react';\nimport './App.css';\nimport useOnScreen from './hooks/useOnScreen';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport BackgroundCanvas from './components/background/BackgroundCanvas';\nimport Home from './pages/home/Home';\nimport About from './pages/about/About';\nimport Projects from './pages/projects/Projects';\nimport Contact from './pages/contact/Contact';\nimport DarkToggle from './components/darkToggle/DarkToggle';\n\nexport default function App() {\n  // Dark-Mode toggle and respective state\n  const isDarkMode = window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches;\n  const [darkMode, setDarkMode] = useState<boolean>(isDarkMode)\n  const handleDarkToggle = (event:React.ChangeEvent) => {\n    setDarkMode( prevDarkMode => !prevDarkMode )\n    event.stopPropagation()\n  }\n\n  // Scrolling References\n  const homeRef = useRef<null | HTMLDivElement>(null); \n  const aboutRef = useRef<null | HTMLDivElement>(null);\n  const projectRef = useRef<null | HTMLDivElement>(null);\n  const contactRef = useRef<null | HTMLDivElement>(null);\n  // Scrolling Mechanism\n  const handleScroll = (target:React.MutableRefObject<HTMLDivElement | null>) => {\n    target.current?.scrollIntoView({ \n      behavior: \"smooth\",\n      block: \"nearest\",\n      inline: \"nearest\"\n     })\n  }\n  // Conditional rendering for homeRef\n  const homeIsOnScreen = useOnScreen(homeRef);\n  const homeLI = () => {\n    const homeRefVariant = {\n      hidden: { x: 5, y: 5, opacity: 0 },\n      visible: {\n        x: 0,\n        y: 0,\n        opacity: 1,\n        transition: {\n          ease: \"easeOut\",\n          duration: 1,\n        }\n      },\n      hide: {\n        opacity: 0,\n        transition: {\n          ease: \"easeInOut\",\n          duration: 1,\n        }\n      }\n    }\n\n    return (\n        <motion.li \n          className=\"li-home\" \n          onClick={() => handleScroll(homeRef)}\n          initial=\"hidden\"\n          animate=\"visible\"\n          exit=\"hide\"\n          variants={homeRefVariant}>\n            <a className=\"nav-item\">Lawrence Han</a>\n        </motion.li>  \n    )\n  }\n\n  return (\n    <>\n      <BackgroundCanvas />\n      {/* <ul className={`navbar ${darkMode && \"dark\"}`}>\n          <AnimatePresence>\n            {!homeIsOnScreen && homeLI()}          \n          </AnimatePresence>  \n          <li onClick={() => handleScroll(aboutRef)}>\n              <a className=\"nav-item\">about</a>\n          </li>\n          <li onClick={() => handleScroll(projectRef)}>\n              <a className=\"nav-item\">experience / projects</a>\n          </li>\n          <li onClick={() => handleScroll(contactRef)}>\n              <a className=\"nav-item\">contact</a>\n          </li>\n      </ul>\n      <div className={`app ${darkMode ? \"dark\" : \"\" }`}>\n        <Home darkMode={darkMode} homeRef={homeRef} />\n        <About darkMode={darkMode} aboutRef={aboutRef} />\n        <Projects darkMode={darkMode} projectRef={projectRef} />\n        <Contact darkMode={darkMode} contactRef={contactRef} />\n      </div>\n      <DarkToggle darkMode={darkMode} handleDarkToggle={handleDarkToggle}/>  */}\n    </>\n  );\n};\n",[],"/Users/lawrencehan/Documents/GitHub/hanlarry/src/pages/home/Home.tsx",["116"],[],"import React from \"react\";\nimport { motion } from \"framer-motion\"\nimport './home.css';\nimport Glasses from '../../assets/Glasses';\nimport HomeProfile from './HomeProfile';\nimport HomeText from './HomeText';\n\ninterface Home {\n    darkMode: boolean;\n    homeRef: React.MutableRefObject<HTMLDivElement | null>;\n}\n\nexport default function Home(props:Home) {\n    const {darkMode, homeRef} = props;\n    const [darkColor, lightColor] = [\"#2A2B2A\", \"#FCF7FF\"]\n\n\n    return (\n        <div className={`home-container ${darkMode && \"dark\"}`} ref={homeRef}>\n            <motion.div className=\"glasses-container\">\n                <Glasses animated={true} darkMode={props.darkMode}/>\n            </motion.div>\n            <HomeProfile darkMode={darkMode} darkColor={darkColor} lightColor={lightColor}/>\n            <HomeText darkMode={darkMode} darkColor={darkColor} lightColor={lightColor} />\n        </div> \n    )\n};","/Users/lawrencehan/Documents/GitHub/hanlarry/src/pages/intro/Intro.tsx",[],[],[],"/Users/lawrencehan/Documents/GitHub/hanlarry/src/assets/Glasses.tsx",[],[],"/Users/lawrencehan/Documents/GitHub/hanlarry/src/components/darkToggle/DarkToggle.tsx",[],[],"/Users/lawrencehan/Documents/GitHub/hanlarry/src/assets/Disk.tsx",["117"],[],"import React from 'react';\nimport { motion } from 'framer-motion';\ninterface Disk {\n    darkMode: boolean;\n    darkColor: string;\n    lightColor: string;\n}\n\n\nexport default function Disk(props:Disk) {\n    const {darkMode, darkColor, lightColor} = props\n    \n    const diskVariant = {\n        hidden: { opacity: 0, y: 100},\n        visible: { \n            opacity: 1, \n            y: -12,\n            transition: {\n                delay: 3.75, \n                type: \"spring\",\n                velocity: 2, // 2 default\n                mass: 4, // 1 default\n                damping: 13, // 10 default\n            }\n        }\n    }\n\n    return (\n        <motion.svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"218\"\n        height=\"120\"\n        fill=\"none\"\n        viewBox=\"0 0 218 120\"\n        className=\"svg-disk\"\n        initial=\"hidden\"\n        animate=\"visible\"\n        variants={diskVariant}\n        >\n            <mask id=\"path-1-inside-1_2_4\" fill={darkMode ? lightColor : lightColor}>\n                <path\n                fillRule=\"evenodd\"\n                d=\"M217.979 74.71v.387h-.004C217.475 99.931 168.872 120 108.99 120 49.107 120 .504 99.932.004 75.097H0V44.903h26.928c19.978-9.49 49.335-15.484 82.062-15.484 32.726 0 62.083 5.994 82.061 15.484h26.928V74.71z\"\n                clipRule=\"evenodd\"\n                ></path>\n            </mask>\n            <path\n                fill={darkMode ? darkColor : darkColor}\n                fillRule=\"evenodd\"\n                d=\"M217.979 74.71v.387h-.004C217.475 99.931 168.872 120 108.99 120 49.107 120 .504 99.932.004 75.097H0V44.903h26.928c19.978-9.49 49.335-15.484 82.062-15.484 32.726 0 62.083 5.994 82.061 15.484h26.928V74.71z\"\n                clipRule=\"evenodd\"\n            ></path>\n            <path\n                fill={darkMode ? lightColor : lightColor}\n                d=\"M217.979 75.097v1.415h1.415v-1.415h-1.415zm-.004 0V73.68h-1.387l-.028 1.387 1.415.029zm-217.971 0l1.415-.029-.028-1.387H.004v1.416zm-.004 0h-1.415v1.415H0v-1.415zm0-30.194v-1.415h-1.415v1.415H0zm26.928 0v1.415h.32l.287-.137-.607-1.278zm164.123 0l-.607 1.278.288.137h.319v-1.415zm26.928 0h1.415v-1.415h-1.415v1.415zm-1.415 29.807v.387h2.83v-.387h-2.83zm1.415-1.029h-.004v2.83h.004v-2.83zm-1.419 1.387c-.115 5.72-2.998 11.298-8.387 16.504-5.393 5.21-13.214 9.962-22.962 13.981-19.489 8.035-46.419 13.032-76.221 13.032v2.83c30.08 0 57.393-5.038 77.3-13.245 9.951-4.103 18.117-9.024 23.85-14.562 5.735-5.541 9.115-11.786 9.25-18.483l-2.83-.057zm-107.57 43.517c-29.802 0-56.732-4.997-76.222-13.032-9.748-4.019-17.57-8.771-22.962-13.98-5.39-5.207-8.272-10.785-8.387-16.505l-2.83.057c.135 6.697 3.515 12.942 9.25 18.483 5.733 5.538 13.9 10.459 23.85 14.562 19.907 8.207 47.22 13.245 77.301 13.245v-2.83zM.004 73.681H0v2.83h.004v-2.83zm1.411 1.416v-.387h-2.83v.387h2.83zm0-.387V44.903h-2.83V74.71h2.83zM0 46.318h26.928v-2.83H0v2.83zm27.535-.137c19.738-9.375 48.874-15.347 81.455-15.347v-2.83c-32.872 0-62.45 6.016-82.669 15.62l1.214 2.557zm81.455-15.347c32.58 0 61.716 5.972 81.454 15.347l1.214-2.556c-20.219-9.605-49.797-15.62-82.668-15.62v2.83zm82.061 15.484h26.928v-2.83h-26.928v2.83zm25.513-1.415V74.71h2.83V44.903h-2.83z\"\n                mask=\"url(#path-1-inside-1_2_4)\"\n            ></path>\n            <path\n                fill={darkMode ? darkColor : darkColor}\n                stroke={darkMode ? lightColor : lightColor}\n                strokeWidth=\"1.415\"\n                d=\"M217.272 45.29c0 6.007-2.926 11.793-8.354 17.125-5.429 5.334-13.322 10.17-23.133 14.247-19.618 8.152-46.769 13.211-76.795 13.211-30.027 0-57.178-5.059-76.796-13.21-9.81-4.078-17.704-8.914-23.133-14.248C3.634 57.083.708 51.297.708 45.29c0-6.006 2.926-11.792 8.353-17.124 5.43-5.334 13.322-10.17 23.133-14.247C51.812 5.766 78.963.708 108.99.708c30.026 0 57.177 5.058 76.795 13.21 9.811 4.077 17.704 8.914 23.133 14.248 5.428 5.332 8.354 11.118 8.354 17.124z\"\n            ></path>\n        </motion.svg>   \n    )\n}\n","/Users/lawrencehan/Documents/GitHub/hanlarry/src/pages/home/HomeProfile.tsx",["118","119","120"],[],"import React from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport Circle from '../../assets/Circle';\nimport ProfileImg from '../../assets/ProfileImg';\nimport Disk from '../../assets/Disk';\ninterface HomeProfile {\n    darkMode: boolean;\n    darkColor: string;\n    lightColor: string;\n}\n\nexport default function HomeProfile(props:HomeProfile) { \n    const {darkMode, darkColor, lightColor} = props;\n    const strokeColor = darkMode ? lightColor : darkColor;\n    return(\n        <motion.div className={`home-col home-profile ${darkMode && \"dark\"}`}>\n            <Circle animated={true} xpos={-70} ypos={-50} darkMode={darkMode} darkColor={darkColor} lightColor={lightColor} />\n            <Circle animated={true} xpos={70} ypos={50} darkMode={darkMode} darkColor={darkColor} lightColor={lightColor} />\n            <ProfileImg />\n            \n            <Disk darkMode={darkMode} darkColor={darkColor} lightColor={lightColor} />\n        </motion.div>\n    )\n}","/Users/lawrencehan/Documents/GitHub/hanlarry/src/pages/home/HomeText.tsx",["121","122","123","124","125"],[],"import React from 'react';\nimport { motion } from 'framer-motion';\nimport Disk from '../../assets/Disk';\ninterface HomeText {\n    darkMode: boolean;\n    darkColor: string;\n    lightColor: string;\n}\ninterface AnimatedLetters {\n    title: string;\n    className: string;\n    highlight?: boolean;\n}\n\n// Variants for framer-motion\nconst textBanner = {\n    visible: { \n        transition: {\n            delayChildren: 7.2,\n            staggerChildren: 0.05\n        }\n    }\n};\nconst textLetter_01 = {\n    hidden: { y: -200, opacity: 0 },\n    visible: {\n        y: 0,\n        opacity: 1,\n        transition: {\n            ease: [0.33, 1, 0.68, 1],\n            duration: 1\n        } \n    }\n};\nconst textLetter_02 = {\n    hidden: { opacity: 0, x: 10 },\n    visible: {\n        opacity: 1,\n        x: 0,\n        transition: {\n            ease: \"easeOut\",\n            duration: 0.25\n        } \n    }\n};\nconst textHighlight = {\n    hidden: { y: 50, opacity: 0, rotate: 0},\n    visible: {\n        y: 0,\n        opacity: 1,\n        rotate: -3,\n        transition: {\n            ease: \"easeOut\",\n            duration: 1.5,\n            delay: 9,\n        } \n    }\n};\n\n// Component for animated letter banner\nconst AnimatedLetters = (props:AnimatedLetters) => {\n    const {title, className, highlight} = props;\n    const titleCheck = (className === \"home-text-title\")\n    return (\n        <motion.span\n            className={`home-text ${className}`}\n            >\n            {[...title].map( (letter) => (\n                <motion.span\n                    className=\"letter\"\n                    variants={titleCheck ? textLetter_01: textLetter_02}>\n                    {(letter === ' ') ? '\\u00A0' : letter}\n                    {(letter === \"L\" && highlight) && \n                        <motion.span\n                            className=\"highlightBox\"\n                            variants={textHighlight}>\n                                &nbsp;\n                        </motion.span>\n                    }\n                </motion.span>\n            ))}\n        </motion.span>\n    )}\n\nexport default function HomeText(props:HomeText) { \n    const {darkMode, darkColor, lightColor} = props;\n\n    return(\n        <motion.div className={`home-col home-text-col ${darkMode && \"dark\"}`}\n            variants={textBanner}\n            initial='hidden'\n            animate='visible'\n        >\n            <AnimatedLetters title={\"HI, WELCOME\"} className={\"home-text-title\"} />\n            <AnimatedLetters title={\"my name is Lawrence Han\"} className={\"home-text-intro\"} highlight={true}/>\n            <AnimatedLetters title={\"I am an engineer . . . \"} className={\"home-text-passage\"} />\n        </motion.div>\n    )\n}","/Users/lawrencehan/Documents/GitHub/hanlarry/src/assets/Circle.tsx",["126"],[],"import React from 'react';\nimport { motion } from 'framer-motion';\ninterface Circle {\n    animated: boolean;\n    darkMode: boolean;\n    darkColor: string;\n    lightColor: string;\n    xpos: number;\n    ypos: number;\n}\n\nexport default function Circle(props:Circle) {\n    const {darkMode, animated, darkColor, lightColor, xpos, ypos} = props;\n    const strokeColor = darkMode ? lightColor : darkColor;\n    const strokeTransition = {\n        delay: 4,\n        duration: 5,\n        ease: [0.6, 0.01, -0.05, 0.95]\n    };\n    const circleTransition = {\n        delay: 4,\n        repeat: Infinity,\n        repeatType: undefined,\n        duration: 8,\n        ease: \"easeInOut\",\n    }\n    const circleVariant = {\n        hidden: { x: xpos, y: ypos, },\n        visible: {\n            x: [xpos, xpos*1.2, xpos, xpos*0.8, xpos],\n            y: [ypos, ypos*-1, ypos, ypos*-1, ypos],\n            transition: circleTransition,\n        }\n    }\n\n    \n    return (\n        <motion.svg className=\"svg-circle\" height=\"300\" width=\"300\"\n            initial=\"hidden\"\n            animate=\"visible\"\n            variants={!animated ? undefined : circleVariant}\n        >\n            <motion.circle \n                cx=\"150\" \n                cy=\"150\" \n                r=\"150\" \n                fill=\"none\" \n                stroke={strokeColor} \n                stroke-width=\"1\"\n                initial={{ pathLength: 0 }}\n                animate={{ pathLength: 1 }}\n                transition={!animated ? undefined : strokeTransition}\n                >\n            </motion.circle>\n        </motion.svg>\n    )\n}","/Users/lawrencehan/Documents/GitHub/hanlarry/src/assets/ProfileImg.tsx",[],[],"/Users/lawrencehan/Documents/GitHub/hanlarry/src/pages/about/About.tsx",["127","128"],[],"import React from 'react';\nimport './about.css';\n\ninterface About {\n    darkMode: boolean;\n    aboutRef: React.MutableRefObject<HTMLDivElement | null>;\n}\n\nexport default function About(props:About) {\n    const {darkMode, aboutRef} = props;\n    return (\n        <div className=\"about page\" ref={aboutRef}>\n            About Page\n        </div>\n    )\n}","/Users/lawrencehan/Documents/GitHub/hanlarry/src/components/navbar/Navbar.tsx",["129"],[],"import React from 'react';\nimport { motion } from 'framer-motion';\ninterface Navbar {\n    darkMode: boolean;\n    handleScroll: (target: React.MutableRefObject<HTMLDivElement | null>) => void;\n    allRefs: ;\n    isScrolled?: boolean;\n}\n\nexport default function Navbar(props:Navbar) {\n    const {darkMode, handleScroll, allRefs} = props;\n    const [homeRef, aboutRef, projectRef, contactRef] = allRefs;\n\n    const homeLI = () => {\n        return (\n            <li onClick={() => handleScroll(homeRef)}>\n                <a className=\"nav-item\">Lawrence Han</a>\n            </li>  \n        )\n    }\n\n    return (\n        <ul className={`navbar ${darkMode && \"dark\"}`}>\n            <li onClick={() => handleScroll(aboutRef)}>\n                <a className=\"nav-item\">about</a>\n            </li>\n            <li onClick={() => handleScroll(projectRef)}>\n                <a className=\"nav-item\">experience / projects</a>\n            </li>\n            <li onClick={() => handleScroll(contactRef)}>\n                <a className=\"nav-item\">contact</a>\n            </li>\n        </ul>\n    )\n}",[],"/Users/lawrencehan/Documents/GitHub/hanlarry/src/components/background/BackgroundCanvas.tsx",["130","131"],[],"import React, { useState, useRef } from 'react';\nimport * as THREE from 'three';\nimport { Canvas, useFrame } from '@react-three/fiber';\nimport './background.css';\nimport { DoubleSide } from 'three';\n\n\nexport default function BackgroundCanvas() {\n    function Sphere(props: JSX.IntrinsicElements['mesh']) {\n        const mesh = useRef<THREE.Mesh>(null!)\n        useFrame((state, delta) => (mesh.current.rotation.x += 0.01))\n        useFrame((state, delta) => (mesh.current.rotation.y += 0.01))\n        return (\n          <mesh\n            {...props}\n            ref={mesh}>\n            <sphereGeometry args={[1,128,128]} /> {/* radius, widthSeg, heightSeg */}\n            <meshNormalMaterial />\n          </mesh>\n        )\n    }\n    function Skeleton(props: JSX.IntrinsicElements['mesh']) {\n        const mesh = useRef<THREE.Mesh>(null!)\n        useFrame((state, delta) => (mesh.current.rotation.x -= 0.005))\n        useFrame((state, delta) => (mesh.current.rotation.y -= 0.005))\n        return (\n            <mesh\n                {...props}\n                ref={mesh}>\n                <icosahedronGeometry args={[1.5, 2]} />  {/* radius, detail */}\n                <meshPhongMaterial color=\"#ffffff\" wireframe={true} side={DoubleSide} />\n            </mesh>\n        )\n    }\n    function Plane(props: JSX.IntrinsicElements['mesh']) {\n        const mesh = useRef<THREE.Mesh>(null!)\n\n        return (\n            <mesh\n                {...props}\n                ref={mesh}>\n                <planeGeometry args={[100, 100]} />  {/* radius, detail */}\n                <meshNormalMaterial side={DoubleSide} transparent={true} opacity={0.3} />\n            </mesh>\n        )\n    }\n\n    function SphereTest(props: JSX.IntrinsicElements['mesh']) {\n        const mesh = useRef<THREE.Mesh>(null!)\n        useFrame((state, delta) => (mesh.current.rotation.x += 0.01))\n        useFrame((state, delta) => (mesh.current.rotation.y += 0.01))\n        return (\n          <mesh\n            {...props}\n            ref={mesh}>\n            <sphereGeometry args={[1,128,128]} /> {/* radius, widthSeg, heightSeg */}\n            <meshPhysicalMaterial transmission={0.7} thickness={0.7} roughness={0.65} color=\"#ffffff\" />\n          </mesh>\n        )\n    }\n    \n    \n    return (\n        <div className='bg' id='canvas-container'>\n            {/* default: camera={ fov: 75, near: 0.1, far: 1000, position: [0, 0, 5] } */}\n            <Canvas>\n                <ambientLight intensity={0.3}/>\n                <pointLight intensity={1.0} position={[10, 10, 10]} color=\"#FFAE00\"/>\n                <Sphere position={[0,0,0]} />\n                <Skeleton position={[0,0,0]} />\n                <Plane position={[0,0,-200]} />\n                {/* <SphereTest position={[0,0,0]} /> */}\n            </Canvas>\n        </div>\n    )\n}","/Users/lawrencehan/Documents/GitHub/hanlarry/src/pages/contact/Contact.tsx",["132","133"],[],"import React from 'react';\nimport './contact.css';\n\ninterface Contact {\n    darkMode: boolean;\n    contactRef: React.MutableRefObject<HTMLDivElement | null>;\n}\n\nexport default function Contact(props:Contact) {\n    const {darkMode, contactRef} = props;\n    return (\n        <div className=\"contact page\" ref={contactRef}>\n            Contact Page\n        </div>\n    )\n}","/Users/lawrencehan/Documents/GitHub/hanlarry/src/pages/projects/Projects.tsx",["134","135"],[],"import React from 'react';\nimport './projects.css';\n\ninterface Projects {\n    darkMode: boolean;\n    projectRef: React.MutableRefObject<HTMLDivElement | null>;\n}\n\nexport default function Projects(props:Projects) {\n    const {darkMode, projectRef} = props;\n    return (\n        <div className=\"projects page\" ref={projectRef}>\n            Projects Page\n        </div>\n    )\n}","/Users/lawrencehan/Documents/GitHub/hanlarry/src/hooks/useOnScreen.tsx",[],[],{"ruleId":"136","severity":1,"message":"137","line":4,"column":18,"nodeType":"138","messageId":"139","endLine":4,"endColumn":33},{"ruleId":"136","severity":1,"message":"140","line":6,"column":8,"nodeType":"138","messageId":"139","endLine":6,"endColumn":12},{"ruleId":"136","severity":1,"message":"141","line":7,"column":8,"nodeType":"138","messageId":"139","endLine":7,"endColumn":13},{"ruleId":"136","severity":1,"message":"142","line":8,"column":8,"nodeType":"138","messageId":"139","endLine":8,"endColumn":16},{"ruleId":"136","severity":1,"message":"143","line":9,"column":8,"nodeType":"138","messageId":"139","endLine":9,"endColumn":15},{"ruleId":"136","severity":1,"message":"144","line":10,"column":8,"nodeType":"138","messageId":"139","endLine":10,"endColumn":18},{"ruleId":"136","severity":1,"message":"145","line":15,"column":10,"nodeType":"138","messageId":"139","endLine":15,"endColumn":18},{"ruleId":"136","severity":1,"message":"146","line":16,"column":9,"nodeType":"138","messageId":"139","endLine":16,"endColumn":25},{"ruleId":"136","severity":1,"message":"147","line":23,"column":9,"nodeType":"138","messageId":"139","endLine":23,"endColumn":17},{"ruleId":"136","severity":1,"message":"148","line":24,"column":9,"nodeType":"138","messageId":"139","endLine":24,"endColumn":19},{"ruleId":"136","severity":1,"message":"149","line":25,"column":9,"nodeType":"138","messageId":"139","endLine":25,"endColumn":19},{"ruleId":"136","severity":1,"message":"150","line":35,"column":9,"nodeType":"138","messageId":"139","endLine":35,"endColumn":23},{"ruleId":"136","severity":1,"message":"151","line":36,"column":9,"nodeType":"138","messageId":"139","endLine":36,"endColumn":15},{"ruleId":"152","severity":1,"message":"153","line":65,"column":13,"nodeType":"154","endLine":65,"endColumn":37},{"ruleId":"155","severity":1,"message":"156","line":13,"column":25,"nodeType":"138","messageId":"157","endLine":13,"endColumn":29},{"ruleId":"155","severity":1,"message":"158","line":10,"column":25,"nodeType":"138","messageId":"157","endLine":10,"endColumn":29},{"ruleId":"136","severity":1,"message":"137","line":2,"column":18,"nodeType":"138","messageId":"139","endLine":2,"endColumn":33},{"ruleId":"155","severity":1,"message":"159","line":12,"column":25,"nodeType":"138","messageId":"157","endLine":12,"endColumn":36},{"ruleId":"136","severity":1,"message":"160","line":14,"column":11,"nodeType":"138","messageId":"139","endLine":14,"endColumn":22},{"ruleId":"136","severity":1,"message":"161","line":3,"column":8,"nodeType":"138","messageId":"139","endLine":3,"endColumn":12},{"ruleId":"155","severity":1,"message":"162","line":61,"column":7,"nodeType":"138","messageId":"157","endLine":61,"endColumn":22},{"ruleId":"155","severity":1,"message":"163","line":85,"column":25,"nodeType":"138","messageId":"157","endLine":85,"endColumn":33},{"ruleId":"136","severity":1,"message":"164","line":86,"column":22,"nodeType":"138","messageId":"139","endLine":86,"endColumn":31},{"ruleId":"136","severity":1,"message":"165","line":86,"column":33,"nodeType":"138","messageId":"139","endLine":86,"endColumn":43},{"ruleId":"155","severity":1,"message":"166","line":12,"column":25,"nodeType":"138","messageId":"157","endLine":12,"endColumn":31},{"ruleId":"155","severity":1,"message":"167","line":9,"column":25,"nodeType":"138","messageId":"157","endLine":9,"endColumn":30},{"ruleId":"136","severity":1,"message":"145","line":10,"column":12,"nodeType":"138","messageId":"139","endLine":10,"endColumn":20},{"ruleId":null,"fatal":true,"severity":2,"message":"168","line":6,"column":13},{"ruleId":"136","severity":1,"message":"169","line":1,"column":17,"nodeType":"138","messageId":"139","endLine":1,"endColumn":25},{"ruleId":"136","severity":1,"message":"170","line":48,"column":14,"nodeType":"138","messageId":"139","endLine":48,"endColumn":24},{"ruleId":"155","severity":1,"message":"171","line":9,"column":25,"nodeType":"138","messageId":"157","endLine":9,"endColumn":32},{"ruleId":"136","severity":1,"message":"145","line":10,"column":12,"nodeType":"138","messageId":"139","endLine":10,"endColumn":20},{"ruleId":"155","severity":1,"message":"172","line":9,"column":25,"nodeType":"138","messageId":"157","endLine":9,"endColumn":33},{"ruleId":"136","severity":1,"message":"145","line":10,"column":12,"nodeType":"138","messageId":"139","endLine":10,"endColumn":20},"@typescript-eslint/no-unused-vars","'AnimatePresence' is defined but never used.","Identifier","unusedVar","'Home' is defined but never used.","'About' is defined but never used.","'Projects' is defined but never used.","'Contact' is defined but never used.","'DarkToggle' is defined but never used.","'darkMode' is assigned a value but never used.","'handleDarkToggle' is assigned a value but never used.","'aboutRef' is assigned a value but never used.","'projectRef' is assigned a value but never used.","'contactRef' is assigned a value but never used.","'homeIsOnScreen' is assigned a value but never used.","'homeLI' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","@typescript-eslint/no-redeclare","'Home' is already defined.","redeclared","'Disk' is already defined.","'HomeProfile' is already defined.","'strokeColor' is assigned a value but never used.","'Disk' is defined but never used.","'AnimatedLetters' is already defined.","'HomeText' is already defined.","'darkColor' is assigned a value but never used.","'lightColor' is assigned a value but never used.","'Circle' is already defined.","'About' is already defined.","Parsing error: Type expected.","'useState' is defined but never used.","'SphereTest' is defined but never used.","'Contact' is already defined.","'Projects' is already defined."]